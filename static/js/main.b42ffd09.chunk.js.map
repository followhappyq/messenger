{"version":3,"sources":["redux/reducers/attachments.js","redux/reducers/dialogs.js","redux/reducers/messages.js","redux/reducers/user.js","assets/img/readed.svg","assets/img/noreaded.svg","redux/reducers sync /^/.*$","components/Button/Button.js","components/Block/Block.js","components/Message/Message.js","components/Messages/Messages.js","components/DialogItem/DialogItem.jsx","components/Time/Time.js","components/IconReaded/IconReaded.js","components/Dialogs/Dialogs.js","utils/helpers/notification.js","components/Avatar/Avatar.js","utils/helpers/generateAvatarFromHash.js","components/Status/Status.js","components/ChatInput/ChatInput.js","utils/helpers/validateField.js","components/FormField/FormField.jsx","core/socket.js","core/axios.js","utils/api/dialogs.js","utils/api/messages.js","utils/api/user.js","utils/api/files.js","redux/actions/dialogs.js","redux/actions/messages.js","redux/actions/user.js","containers/Dialogs.js","containers/Messages.js","containers/ChatInput.js","containers/Status.js","containers/Sidebar.js","components/Sidebar/Sidebar.jsx","components/UploadFiles/UploadFiles.jsx","modules/LoginForm/components/LoginForm.jsx","utils/validate.js","redux/store.js","modules/LoginForm/LoginFormModules.js","modules/LoginForm/containers/LoginForm.js","modules/RegisterForm/components/RegisterForm.jsx","modules/RegisterForm/RegisterFormModules.js","modules/RegisterForm/containers/RegisterForm.js","pages/Auth/components/CheckInfo.jsx","pages/Auth/auth.jsx","pages/Home/home.jsx","App.js","index.js","redux/reducers/index.js"],"names":["initialState","items","state","type","payload","filter","item","uid","currentDialogId","window","location","pathname","split","isLoading","message","_id","data","token","localStorage","isAuth","module","exports","map","webpackContext","req","id","webpackContextResolve","__webpack_require__","o","e","Error","code","keys","Object","resolve","Button","props","className","classNames","size","Block","children","Message","user","text","date","isMe","readed","attachments","isTyping","onRemoveMessage","length","isReaded","content","onClick","trigger","EllipsisOutlined","style","fontSize","reactStringReplace","match","i","emoji","set","index","key","src","url","alt","filename","defaultProps","Messages","blockRef","ref","tip","bind","description","DialogItem","createdAt","lastMessage","partner","userId","to","isOnline","login","isToday","format","undread","Time","distanceInWordsToNow","addSuffix","locale","enLocale","IconReaded","readedSvg","noReadedSvg","Dialogs","onSearch","inputValue","Search","placeholder","onChange","target","value","orderBy","author","title","duration","notification","Avatar","avatar","hash","substr","char","number","charCodeAt","r","g","b","color","tinycolor","lighten","saturate","toHexString","colorLighten","generateAvatarFromHash","firstChar","background","Status","online","ChatInput","emojiPickerVisible","setValue","addEmoji","handleSendMessage","toggleEmojiPicker","sendMessage","onSelectFiles","onSelect","emojiTag","SmileOutlined","onKeyUp","onFiles","containerProps","uploadProps","accept","multiple","CameraOutlined","SendOutlined","touched","errors","FormField","name","handleChange","handleBlur","values","prefix","Item","validateStatus","validateField","hasFeedback","onBlur","help","socket","io","axios","defaults","baseURL","headers","common","get","post","delete","dialogId","dialog_id","postData","query","file","formData","FormData","append","actions","setDialogs","setCurrentDialogId","dispatch","emit","fetchDialogs","dialogsApi","then","setMessages","addMessage","getState","dialogs","dialog","setIsLoading","bool","removeMessageById","console","log","messagesApi","catch","fetchSendMessage","fetchMessages","setUserData","setIsAuth","fetchUserData","userApi","err","response","status","fetchUserLogin","fetchUserRegister","connect","dialogsActions","useState","Array","from","filtred","setFiltredItems","onChangeInput","toLowerCase","indexOf","useEffect","on","removeListener","messages","messagesActions","messagesRef","useRef","onNewMessage","current","scrollTo","scrollHeight","setAttachments","setShowEmojiPicker","files","a","uploaded","Math","round","random","filesApi","keyCode","trim","colons","currentDialogObj","visible","setVisible","setInputValue","messageText","setMessagaText","users","setUsers","selectedUserId","setSelectedUserId","onClose","onShow","onSelectUser","onModalOk","onChangeTextArea","Option","Select","TextArea","Input","Sidebar","options","MenuOutlined","EditOutlined","footer","disabled","loading","label","notFoundContent","width","defaultActiveFirstOption","showArrow","filterOption","showSearch","autosize","minRows","maxRows","getBase64","Promise","reject","reader","FileReader","readAsDataURL","onload","result","onerror","error","UploadFiles","removeAttachment","previewVisible","previewImage","fileList","setState","handlePreview","preview","originFileObj","action","listType","onPreview","onRemove","onCancel","LoginForm","handleSubmit","isSubmitting","onSubmit","email","MailOutlined","password","Password","LockOutlined","htmlType","rules","test","password_2","forEach","composeEnchancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","middleware","thunk","store","createStore","rootReducer","applyMiddleware","withFormik","enableReinitialize","mapPropsToValues","validate","validateForm","setSubmitting","userActions","history","push","displayName","RegisterForm","dirty","isValid","initialValues","remember","UserOutlined","CheckEmailInfo","verified","setVerified","search","info","renderTextInfo","subTitle","extra","Auth","exact","path","component","CheckInfo","withRouter","pop","render","ReactDOM","document","getElementById","combineReducers","reduce","initial","require","default"],"mappings":"2HAAMA,EAAe,CACnBC,MAAO,IAGM,qBAA8C,IAA7CC,EAA4C,uDAApCF,EAAoC,yCAApBG,EAAoB,EAApBA,KAAMC,EAAc,EAAdA,QAC5C,OAAQD,GACN,IAAK,wBACH,OAAO,eACFD,EADL,CAEED,MAAOG,IAEX,IAAK,0BACH,OAAO,eACFF,EADL,CAEED,MAAOC,EAAMD,MAAMI,QAAO,SAACC,GAAD,OAAUA,EAAKC,MAAQH,EAAQG,SAE7D,QACE,OAAOL,K,oDCjBPF,EAAe,CACnBC,MAAO,GACPO,gBAAiBC,OAAOC,SAASC,SAASC,MAAM,WAAW,GAC3DC,WAAW,GAGE,qBAA8C,IAA7CX,EAA4C,uDAApCF,EAAoC,yCAApBG,EAAoB,EAApBA,KAAMC,EAAc,EAAdA,QAC5C,OAAQD,GACN,IAAK,oBACH,OAAO,eACFD,EADL,CAEED,MAAOG,IAEX,IAAK,gCACH,OAAO,eACFF,EADL,CAEEM,gBAAiBJ,IAErB,QACE,OAAOF,K,6DCnBPF,EAAe,CACnBC,MAAO,GACPY,WAAW,GAGE,qBAA8C,IAA7CX,EAA4C,uDAApCF,EAAoC,yCAApBG,EAAoB,EAApBA,KAAMC,EAAc,EAAdA,QAC5C,OAAQD,GACN,IAAK,uBACH,OAAO,eACFD,EADL,CAEED,MAAM,GAAD,mBAAMC,EAAMD,OAAZ,CAAmBG,MAE5B,IAAK,qBACH,OAAO,eACFF,EADL,CAEED,MAAOG,EACPS,WAAW,IAEf,IAAK,0BACH,OAAO,eACFX,EADL,CAEED,MAAM,YAAKC,EAAMD,MAAMI,QAAO,SAACS,GAAD,OAAaA,EAAQC,MAAQX,QAE/D,IAAK,0BACH,OAAO,eACFF,EADL,CAEEW,UAAWT,IAEf,QACE,OAAOF,K,oDC7BPF,EAAe,CACnBgB,KAAM,KACNC,MAAOR,OAAOS,aAAaD,MAC3BE,SAAUV,OAAOS,aAAaD,OAGjB,qBAA8C,IAA7Cf,EAA4C,uDAApCF,EAAoC,yCAApBG,EAAoB,EAApBA,KAAMC,EAAc,EAAdA,QAC5C,OAAQD,GACN,IAAK,gBACH,OAAO,eACFD,EADL,CAEEc,KAAMZ,EACNe,QAAQ,EACRF,MAAOR,OAAOS,aAAaD,QAE/B,IAAK,mBACH,OAAO,eACFf,EADL,CAEEiB,OAAQf,IAEZ,QACE,OAAOF,K,oBCrBbkB,EAAOC,QAAU,IAA0B,oC,oBCA3CD,EAAOC,QAAU,IAA0B,sC,0SCA3C,IAAIC,EAAM,CACT,KAAM,GACN,gBAAiB,IACjB,mBAAoB,IACpB,YAAa,IACb,eAAgB,IAChB,UAAW,GACX,aAAc,GACd,aAAc,IACd,gBAAiB,IACjB,SAAU,IACV,YAAa,KAId,SAASC,EAAeC,GACvB,IAAIC,EAAKC,EAAsBF,GAC/B,OAAOG,EAAoBF,GAE5B,SAASC,EAAsBF,GAC9B,IAAIG,EAAoBC,EAAEN,EAAKE,GAAM,CACpC,IAAIK,EAAI,IAAIC,MAAM,uBAAyBN,EAAM,KAEjD,MADAK,EAAEE,KAAO,mBACHF,EAEP,OAAOP,EAAIE,GAEZD,EAAeS,KAAO,WACrB,OAAOC,OAAOD,KAAKV,IAEpBC,EAAeW,QAAUR,EACzBN,EAAOC,QAAUE,EACjBA,EAAeE,GAAK,K,2OCVLU,G,OAfA,SAACC,GACd,OACE,kBAAC,IAAD,eACEC,UAAWC,IAAW,SAAUF,EAAMC,UAAW,CAC/C,gBAAgC,UAAfD,EAAMG,QAErBH,MCJKI,G,OAJD,SAAC,GAA6B,IAA3BC,EAA0B,EAA1BA,SAAUJ,EAAgB,EAAhBA,UACzB,OAAO,yBAAKA,UAAWC,IAAW,QAASD,IAAaI,K,6CCMpDC,G,OAAU,SAAC,GAAD,IACdC,EADc,EACdA,KACAC,EAFc,EAEdA,KACAC,EAHc,EAGdA,KACAC,EAJc,EAIdA,KACAC,EALc,EAKdA,OACAC,EANc,EAMdA,YACAC,EAPc,EAOdA,SACAC,EARc,EAQdA,gBARc,OAUd,yBACEb,UAAWC,IAAW,UAAW,CAC/B,gBAAiBQ,EACjB,qBAAsBG,EACtB,iBAAkBD,GAAsC,IAAvBA,EAAYG,UAG/C,yBAAKd,UAAU,oBACb,kBAAC,EAAD,CAAYS,KAAMA,EAAMM,SAAUL,IAClC,kBAAC,IAAD,CACEM,QACE,6BACE,kBAAC,IAAD,CAAQC,QAASJ,GAAjB,mBAGJK,QAAQ,SAER,yBAAKlB,UAAU,yBACb,kBAACmB,EAAA,EAAD,CAAkBC,MAAO,CAAEC,SAAU,QAGzC,yBAAKrB,UAAU,mBACb,kBAAC,EAAD,CAAQM,KAAMA,KAEhB,yBAAKN,UAAU,kBACXO,GAAQK,IACR,yBAAKZ,UAAU,mBACZO,GACC,uBAAGP,UAAU,iBACVsB,IAAmBf,EAAM,YAAY,SAACgB,EAAOC,GAAR,OACpC,kBAAC,IAAD,CAAOC,MAAOF,EAAOG,IAAI,QAAQxB,KAAM,SAI5CU,GACC,yBAAKZ,UAAU,mBACb,+BACA,+BACA,iCAKR,yBAAKA,UAAU,wBACZW,GACCA,EAAY1B,KAAI,SAAChB,EAAM0D,GAAP,OACd,yBAAKC,IAAKD,EAAO3B,UAAU,6BACzB,yBAAK6B,IAAK5D,EAAK6D,IAAKC,IAAK9D,EAAK+D,gBAIrCxB,GACC,0BAAMR,UAAU,iBACd,kBAAC,EAAD,CAAMQ,KAAMA,UAQxBH,EAAQ4B,aAAe,CACrB3B,KAAM,IAcOD,Q,iBC1DA6B,G,OAhCE,SAAC,GAA2D,IAAzDC,EAAwD,EAAxDA,SAAU3D,EAA8C,EAA9CA,UAAWZ,EAAmC,EAAnCA,MAAO0C,EAA4B,EAA5BA,KAAMO,EAAsB,EAAtBA,gBACpD,OACE,yBACEuB,IAAKD,EACLnC,UAAWC,IAAW,WAAY,CAAE,oBAAqBzB,KAExDA,EACC,kBAAC,IAAD,CAAM0B,KAAK,QAAQmC,IAAI,yBACrBzE,IAAUY,EACZZ,EAAMkD,OAAS,EACblD,EAAMqB,KAAI,SAAChB,GAAD,OACR,kBAAC,EAAD,eACE2D,IAAK3D,EAAKS,KACNT,EAFN,CAGEwC,KAAMH,EAAK5B,MAAQT,EAAKqC,KAAK5B,IAC7BmC,gBAAiBA,EAAgByB,U,EAAWrE,EAAKS,WAIrD,kBAAC,IAAD,CAAO6D,YAAY,oBAGrB,kBAAC,IAAD,CAAOA,YAAY,mB,oCC4BZC,G,OAzCI,SAAC,GAAD,IARKC,EAStB/D,EADiB,EACjBA,IACA+B,EAFiB,EAEjBA,KACAtC,EAHiB,EAGjBA,gBACAuE,EAJiB,EAIjBA,YACAC,EALiB,EAKjBA,QACAC,EANiB,EAMjBA,OANiB,OAQjB,kBAAC,IAAD,CAAMC,GAAE,kBAAanE,IACnB,yBACEsB,UAAWC,IAAW,gBAAiB,CACrC,wBAAyB0C,EAAQG,SACjC,0BAA2B3E,IAAoBO,KAGjD,yBAAKsB,UAAU,wBACb,kBAAC,EAAD,CAAQM,KAAMoC,EAAYpC,QAE5B,yBAAKN,UAAU,sBACb,yBAAKA,UAAU,0BACb,2BAAI2C,EAAQI,OACZ,+BA7BcN,EA6BQC,EAAYD,UA5BtCO,IAAQP,GACHQ,IAAOR,EAAW,SAElBQ,IAAOR,EAAW,iBA2BrB,yBAAKzC,UAAU,6BACb,2BACG0C,EAAYpC,KAAK5B,MAAQkE,EAAzB,eACWF,EAAYnC,MADvB,UAEMoC,EAAQI,MAFd,aAEwBL,EAAYnC,OAEtCE,GAAQ,kBAAC,EAAD,CAAYA,KAAMA,EAAMM,SAAU2B,EAAYhC,SACtDgC,EAAYQ,QAAU,GACrB,yBAAKlD,UAAU,mCACZ0C,EAAYQ,QAAU,EAAI,KAAOR,EAAYQ,e,oCCnC7CC,EAVF,SAAC,GAAD,IAAG3C,EAAH,EAAGA,KAAH,OACX,kBAAC,WAAD,KACG4C,IAAqB5C,EAAM,CAAE6C,WAAW,EAAMC,OAAQC,Q,oCCkB5CC,EAlBI,SAAC,GAAD,IAAG/C,EAAH,EAAGA,KAAMM,EAAT,EAASA,SAAT,OAChBN,IACEM,EACC,yBAAKf,UAAU,uBAAuB6B,IAAK4B,IAAW1B,IAAI,gBAE1D,yBACE/B,UAAU,gDACV6B,IAAK6B,IACL3B,IAAI,qBAGV,M,kBCWa4B,G,OArBC,SAAC,GAAD,IAAG/F,EAAH,EAAGA,MAAOgF,EAAV,EAAUA,OAAQgB,EAAlB,EAAkBA,SAAUC,EAA5B,EAA4BA,WAAY1F,EAAxC,EAAwCA,gBAAxC,OACd,yBAAK6B,UAAU,WACb,yBAAKA,UAAU,mBACb,kBAAC,IAAM8D,OAAP,CACEC,YAAY,SACZC,SAAU,SAACxE,GAAD,OAAOoE,EAASpE,EAAEyE,OAAOC,QACnCA,MAAOL,KAGVM,IAAQvG,EAAO,CAAC,cAAe,CAAC,SAASqB,KAAI,SAAChB,GAAD,OAC5C,kBAAC,EAAD,eACE2D,IAAK3D,EAAKS,IACV+B,KAAMxC,EAAKmG,OAAO1F,MAAQkE,EAC1BA,OAAQA,EACRzE,gBAAiBA,GACbF,U,4CCpBG,cAAmD,IAAhDsC,EAA+C,EAA/CA,KAA+C,IAAzCzC,YAAyC,MAAlC,OAAkC,EAA1BuG,EAA0B,EAA1BA,MAA0B,IAAnBC,gBAAmB,MAAR,EAAQ,EAC/DC,IAAazG,GAAM,CACjBW,QAAS4F,EACT9B,YAAahC,EACb+D,SAAUA,KCmBCE,EApBA,SAAC,GAAc,IAAZlE,EAAW,EAAXA,KAChB,GAAIA,EAAKmE,OACP,OAAO,yBAAK5C,IAAKvB,EAAKmE,OAAQ1C,IAAI,WAC5B,IAAD,ECIM,SAAC2C,GAAU,IAAD,EACLA,EACfC,OAAO,EAAG,GACVpG,MAAM,IACNU,KAAI,SAAC2F,GAAD,OAdgBC,EAcUD,EAAKE,WAAW,IAbpC,IACJ,IAELD,EAAS,EACJ,EAEFA,EAAS,IAAM,IAAMA,EAAS,EAAI,EAAIA,EAPvB,IAACA,KAUA,mBAChBE,EADgB,KACbC,EADa,KACVC,EADU,KAMvB,MAAO,CACLC,MAAOC,IAAU,CAAEJ,IAAGC,IAAGC,MAAKG,QAAQ,IAAIC,SAAS,IAAIC,cACvDC,aAAcJ,IAAU,CAAEJ,IAAGC,IAAGC,MAAKG,QAAQ,IAAIC,SAAS,IAAIC,eDX9BE,CAAuBlF,EAAK5B,KAApDwG,EADH,EACGA,MAAOK,EADV,EACUA,aAETE,EAAYnF,EAAKyC,MAAM,GAC7B,OACE,yBACE3B,MAAO,CACLsE,WAAW,2BAAD,OAA6BR,EAA7B,gBAA0CK,EAA1C,UAEZvF,UAAU,wBAETyF,IEEME,I,OAfA,SAAC,GAAD,IAAGC,EAAH,EAAGA,OAAQ7C,EAAX,EAAWA,MAAX,OACb,yBAAK/C,UAAU,8BACb,uBAAGA,UAAU,gCAAgC+C,GAC7C,yBAAK/C,UAAU,8BACb,yBAAKA,UAAWC,IAAW,SAAU,CAAE,iBAAkB2F,KACtDA,EAAS,SAAW,e,wCC8DdC,I,OA/DG,SAAC9F,GAAW,IAE1B+F,EASE/F,EATF+F,mBACA5B,EAQEnE,EARFmE,MACA6B,EAOEhG,EAPFgG,SACAC,EAMEjG,EANFiG,SACAC,EAKElG,EALFkG,kBACAC,EAIEnG,EAJFmG,kBACAC,EAGEpG,EAHFoG,YACAxF,EAEEZ,EAFFY,YACAyF,EACErG,EADFqG,cAGF,OACE,kBAAC,WAAD,KACE,yBAAKpG,UAAU,cACb,yBAAKA,UAAU,yBACZ8F,GACC,yBAAK9F,UAAU,4BACb,kBAAC,IAAD,CACE0B,IAAI,QACJ2E,SAAU,SAACC,GACTN,EAASM,OAKjB,kBAACC,GAAA,EAAD,CAAetF,QAASiF,KAG1B,kBAAC,IAAD,CACEhG,KAAK,QACL6D,YAAY,qBACZC,SAAU,SAACxE,GAAD,OAAOuG,EAASvG,EAAEyE,OAAOC,QACnCsC,QAASP,EACT/B,MAAOA,IAET,yBAAKlE,UAAU,uBACb,kBAAC,eAAD,CACEyG,QAASL,EACTM,eAAgB,CACd1G,UAAW,kCAEb2G,YAAa,CACXC,OAAQ,4BACRC,SAAU,aAGZ,kBAACC,GAAA,EAAD,OAGF,kBAACC,GAAA,EAAD,CAAc9F,QAASkF,MAG3B,kBAAC,GAAD,CAAaxF,YAAaA,OChEhB,YAACiB,EAAKoF,EAASC,GAC7B,OAAID,EAAQpF,GACNqF,EAAOrF,GACF,QAEF,UAEF,KC6BMsF,GA/BG,SAAC,GAUZ,IATLC,EASI,EATJA,KACApD,EAQI,EARJA,YACAiD,EAOI,EAPJA,QACAC,EAMI,EANJA,OACAG,EAKI,EALJA,aACAC,EAII,EAJJA,WACAC,EAGI,EAHJA,OACAC,EAEI,EAFJA,OACAzJ,EACI,EADJA,KAEA,OACE,kBAAC,IAAK0J,KAAN,CACEC,eAAgBC,GAAcP,EAAMH,EAASC,GAC7CU,aAAW,EACX3D,SAAUoD,EACVQ,OAAQP,EACRQ,KAAOb,EAAQG,GAAcF,EAAOE,GAAb,KAEvB,kBAAC,IAAD,CACE/H,GAAI+H,EACJpD,YAAaA,EACbwD,OAAQA,EACRrH,KAAK,QACLgE,MAAOoD,EAAOH,GACdrJ,KAAMA,M,kDC1BCgK,G,OAFAC,GAAG,qD,qBCAlBC,KAAMC,SAASC,QAAU,oDACzBF,KAAMC,SAASE,QAAQC,OAAvB,MAAyChK,OAAOS,aAAaD,MAE7DR,OAAO4J,MAAQA,KAEAA,UAAf,ECLe,GACL,kBAAMA,GAAMK,IAAI,aADX,GAEL,gBAAG1F,EAAH,EAAGA,QAASpC,EAAZ,EAAYA,KAAZ,OAAuByH,GAAMM,KAAK,WAAY,CAAE3F,UAASpC,UCFpD,GACK,SAACnB,GAAD,OAAQ4I,GAAMK,IAAI,oBAAsBjJ,IAD7C,GAED,SAACA,GAAD,OAAQ4I,GAAMO,OAAO,gBAAkBnJ,IAFtC,GAGP,SAACmB,EAAMiI,EAAU7H,GAAjB,OACJqH,GAAMM,KAAK,YAAa,CACtB/H,KAAMA,EACNkI,UAAWD,EACX7H,iBCPS,GACL,SAAC+H,GAAD,OAAcV,GAAMM,KAAK,eAAgBI,IADpC,GAEL,SAACA,GAAD,OAAcV,GAAMM,KAAK,eAAgBI,IAFpC,GAGD,SAAChE,GAAD,OAAUsD,GAAMK,IAAI,qBAAuB3D,IAH1C,GAIN,kBAAMsD,GAAMK,IAAI,aAJV,GAKF,SAACM,GAAD,OAAWX,GAAMK,IAAI,oBAAsBM,ICLzC,GACL,SAACC,GACP,IAAMC,EAAW,IAAIC,SAErB,OADAD,EAASE,OAAO,OAAQH,GACjBZ,GAAMM,KAAK,SAAUO,EAAU,CACpCV,QAAS,CACP,eAAgB,0BCLlBa,GAAU,CACdC,WAAY,SAACrL,GAAD,MAAY,CACtBE,KAAM,oBACNC,QAASH,IAEXsL,mBAAoB,SAAC9J,GAAD,OAAQ,SAAC+J,GAC3BrB,GAAOsB,KAAK,eAAgBhK,GAC5B+J,EAAS,CACPrL,KAAM,gCACNC,QAASqB,MAGbiK,aAAc,kBAAM,SAACF,GACnBG,KAAoBC,MAAK,YAAe,IAAZ5K,EAAW,EAAXA,KAC1BwK,EAASH,GAAQC,WAAWtK,UAKnBqK,MCpBTA,GAAU,CACdQ,YAAa,SAAC5L,GAAD,MAAY,CACvBE,KAAM,qBACNC,QAASH,IAEX6L,WAAY,SAAChL,GAAD,OAAa,SAAC0K,EAAUO,GACdA,IAAZC,QACAxL,kBAEgBM,EAAQmL,OAAOlL,KACrCyK,EAAS,CACPrL,KAAM,uBACNC,QAASU,MAIfoL,aAAc,SAACC,GAAD,MAAW,CACvBhM,KAAM,0BACNC,QAAS+L,IAEXC,kBAAmB,SAAC3K,GAAD,OAAQ,SAAC+J,GAC1Ba,QAAQC,IAAI7K,GACZ8K,GACc9K,GACXmK,MAAK,YAAc,EAAX5K,KACPwK,EAAS,CAAErL,KAAM,0BAA2BC,QAASqB,OAEtD+K,OAAM,WACLhB,EAASH,GAAQa,cAAa,SAGpCO,iBAAkB,SAAC7J,EAAMiI,EAAU7H,GAAjB,OAAiC,SAACwI,GAClDe,GAAiB3J,EAAMiI,EAAU7H,KAEnC0J,cAAe,SAAC7B,GAAD,OAAc,SAACW,GAC5BA,EAASH,GAAQa,cAAa,IAC9BK,GACoB1B,GACjBe,MAAK,YAAe,IAAZ5K,EAAW,EAAXA,KACPwK,EAASH,GAAQQ,YAAY7K,OAE9BwL,OAAM,WACLhB,EAASH,GAAQa,cAAa,UAKvBb,MC9CTA,GAAU,CACdsB,YAAa,SAAC3L,GAAD,MAAW,CACtBb,KAAM,gBACNC,QAASY,IAEX4L,UAAW,SAACT,GAAD,MAAW,CACpBhM,KAAM,mBACNC,QAAS+L,IAEXU,cAAe,kBAAM,SAACrB,GACpBsB,KAEGlB,MAAK,YAAe,IAAZ5K,EAAW,EAAXA,KACPwK,EAASH,GAAQsB,YAAY3L,OAE9BwL,OAAM,SAACO,GACsB,MAAxBA,EAAIC,SAASC,SACfzB,EAASH,GAAQuB,WAAU,WACpBnM,OAAOS,aAAaD,YAInCiM,eAAgB,SAACnC,GAAD,OAAc,SAACS,GAC7B,OAAOsB,GACG/B,GACPa,MAAK,YAAe,IAAZ5K,EAAW,EAAXA,KACCC,EAAUD,EAAVC,MAUR,OATA2F,EAAa,CACXF,MAAO,UACP9D,KAAM,qCACNzC,KAAM,YAERM,OAAO4J,MAAMC,SAASE,QAAQC,OAA9B,MAAgDxJ,EAChDR,OAAOS,aAAP,MAA+BD,EAC/BuK,EAASH,GAAQwB,iBACjBrB,EAASH,GAAQuB,WAAU,IACpB5L,KAERwL,OAAM,YACmB,MADD,EAAfQ,SACKC,QACXrG,EAAa,CACXF,MAAO,yBACP9D,KAAM,+BACNzC,KAAM,eAKhBgN,kBAAmB,SAACpC,GAAD,OAAc,SAACS,GAChC,OAAOsB,GAAe/B,GAAUa,MAAK,YACnC,OADiD,EAAX5K,WAM7BqK,MCNA+B,gBAAQ,qBAAGpB,UAAuBqB,GAAlCD,EA7CC,SAAC,GAAsD,IAApD1B,EAAmD,EAAnDA,aAAclL,EAAqC,EAArCA,gBAAiBP,EAAoB,EAApBA,MAAOgF,EAAa,EAAbA,OAAa,EACrCqI,mBAAS,IAD4B,mBAC7DpH,EAD6D,KACjDkC,EADiD,OAEjCkF,mBAASC,MAAMC,KAAKvN,IAFa,mBAE7DwN,EAF6D,KAEpDC,EAFoD,KAG9DC,EAAgB,WAAiB,IAAhBpH,EAAe,uDAAP,GAC7BmH,EACEzN,EAAMI,QACJ,SAAC4L,GAAD,OACEA,EAAOxF,OAAOrB,MAAMwI,cAAcC,QAAQtH,EAAMqH,gBAAkB,GAClE3B,EAAOjH,QAAQI,MAAMwI,cAAcC,QAAQtH,EAAMqH,gBAAkB,MAGzExF,EAAS7B,IAuBX,OApBAuH,qBAAU,WACJ7N,EAAMkD,QACRwK,MAGD,CAAC1N,IAEJ6N,qBAAU,WAMR,OALApC,IAEAvB,GAAO4D,GAAG,wBAAyBrC,GACnCvB,GAAO4D,GAAG,qBAAsBrC,GAEzB,WACLvB,GAAO6D,eAAe,wBAAyBtC,GAC/CvB,GAAO6D,eAAe,qBAAsBtC,MAG7C,IAGD,kBAAC,EAAD,CACEzG,OAAQA,EACRhF,MAAOwN,EACPxH,SAAU0H,EACVzH,WAAYA,EACZ1F,gBAAiBA,OCMR4M,gBACb,gBAAGpB,EAAH,EAAGA,QAASiC,EAAZ,EAAYA,SAAUtL,EAAtB,EAAsBA,KAAtB,MAAkC,CAChCnC,gBAAiBwL,EAAQxL,gBACzBP,MAAOgO,EAAShO,MAChBY,UAAWoN,EAASpN,UACpB8B,KAAMA,EAAK3B,QAEbkN,GAPad,EA7CC,SAAC,GAQV,IAPL5M,EAOI,EAPJA,gBACAkM,EAMI,EANJA,cACAZ,EAKI,EALJA,WACA7L,EAII,EAJJA,MACA0C,EAGI,EAHJA,KACA9B,EAEI,EAFJA,UACAuL,EACI,EADJA,kBAEM+B,EAAcC,iBAAO,MAErBC,EAAe,SAACrN,GACpB8K,EAAW9K,IAoBb,OAjBA8M,qBAAU,WAOR,OANItN,GACFkM,EAAclM,GAGhB2J,GAAO4D,GAAG,qBAAsBM,GAEzB,kBAAMlE,GAAO6D,eAAe,qBAAsBK,MAExD,CAAC7N,IAEJsN,qBAAU,WACJK,EAAYG,SACdH,EAAYG,QAAQC,SAAS,EAAGJ,EAAYG,QAAQE,gBAErD,CAACvO,IAEGO,EACL,kBAAC,EAAD,CACEmC,KAAMA,EACN6B,SAAU2J,EACVlO,MAAOA,EACPY,UAAWA,IAAc8B,EACzBO,gBAAiBkJ,IAGnB,kBAAC,IAAD,CAAOxH,YAAY,mB,wCCsCRwI,gBAAQ,qBAAGpB,UAAuBkC,GAAlCd,EAhFG,SAAC,GAA2C,IAAzCX,EAAwC,EAAxCA,iBAAkBjM,EAAsB,EAAtBA,gBAAsB,EACjC8M,mBAAS,IADwB,mBACpD/G,EADoD,KAC7C6B,EAD6C,OAErBkF,mBAAS,IAFY,mBAEpDtK,EAFoD,KAEvCyL,EAFuC,OAGVnB,mBAAS,IAHC,mBAGpDnF,EAHoD,KAGhCuG,EAHgC,KAarDlG,EAAc,WAClBiE,EACElG,EACA/F,EACAwC,EAAY1B,KAAI,SAAC2J,GAAD,OAAUA,EAAK1K,QAEjCkO,EAAe,IACfrG,EAAS,KASLK,EAAa,yCAAG,WAAOkG,GAAP,oBAAAC,EAAA,sDAChBC,EAAW,GADK,KAAAD,EAAA,iBAEX/K,GAFW,kBAAA+K,EAAA,6DAGZ3D,EAAO0D,EAAM9K,GACbtD,EAAMuO,KAAKC,MAAsB,IAAhBD,KAAKE,UAC5BH,EAAQ,uBACHA,GADG,CAEN,CACEtO,MACAiJ,KAAMyB,EAAKzB,KACXyD,OAAQ,eAGZwB,EAAeI,GAbG,SAeZI,GAAgBhE,GAAMW,MAAK,YAAe,IAAZ5K,EAAW,EAAXA,KAClC6N,EAAWA,EAASvN,KAAI,SAAChB,GACvB,OAAIA,EAAKC,MAAQA,EACR,CACL0M,OAAQ,OACR1M,IAAKS,EAAKiK,KAAKlK,IACfyI,KAAMxI,EAAKiK,KAAK5G,SAChBF,IAAKnD,EAAKiK,KAAK9G,KAGZ7D,QAzBO,0CAEXuD,EAAI,EAFO,YAEJA,EAAI8K,EAAMxL,QAFN,yCAEXU,GAFW,eAEcA,IAFd,sBA6BpB4K,EAAeI,GA7BK,2CAAH,sDAgCnB,OAAKrO,EAKH,kBAAC,GAAD,CACE+F,MAAOA,EACP6B,SAAUA,EACVD,mBAAoBA,EACpBI,kBAjEsB,WACxBmG,GAAoBvG,IAiElBG,kBAhDsB,SAACzG,GACP,KAAdA,EAAEqN,SAAkB3I,EAAM4I,QAC5B3G,KA+CAH,SA/Da,SAAC,GAAgB,IAAd+G,EAAa,EAAbA,OAClBhH,GAAU7B,EAAQ,IAAM6I,GAAQD,SA+D9B3G,YAAaA,EACbxF,YAAaA,EACbyF,cAAeA,IAbV,QC7CI2E,gBAAQ,gBAAGpB,EAAH,EAAGA,QAASrJ,EAAZ,EAAYA,KAAZ,MAAwB,CAC7CqJ,QAASA,EAAQ/L,MACjBO,gBAAiBwL,EAAQxL,gBACzBmC,KAAMA,EAAK3B,QAHEoM,EApBA,SAAC,GAAwC,IAAtC5M,EAAqC,EAArCA,gBAAiBmC,EAAoB,EAApBA,KAAMqJ,EAAc,EAAdA,QACvC,IAAKA,EAAQ7I,SAAW3C,EACtB,OAAO,KAGT,IAAM6O,EAAmBrD,EAAQ3L,QAC/B,SAAC4L,GAAD,OAAYA,EAAOlL,MAAQP,KAC3B,GAEEwE,EAAU,GAQd,OALEA,EADEqK,EAAiB5I,OAAO1F,MAAQ4B,EAAK5B,IAC7BsO,EAAiBrK,QAEjBqK,EAAiB5I,OAGtB,kBAAC,GAAD,CAAYwB,OAAQjD,EAAQG,SAAUC,MAAOJ,EAAQI,WC0D/CgI,gBAAQ,kBAAe,CAAEzK,KAAjB,EAAGA,KAAyB3B,QAApCoM,EAzEU,SAAC,GAAc,IAAZzK,EAAW,EAAXA,KAAW,EACP2K,oBAAS,GADF,mBAC9BgC,EAD8B,KACrBC,EADqB,OAEDjC,mBAAS,IAFR,mBAE9BpH,EAF8B,KAElBsJ,EAFkB,OAGClC,mBAAS,IAHV,mBAG9BmC,EAH8B,KAGjBC,EAHiB,OAIXpC,mBAAS,IAJE,mBAI9BqC,EAJ8B,KAIvBC,EAJuB,OAKHtC,oBAAS,GALN,mBAK9BzM,EAL8B,KAKnBqL,EALmB,OAMOoB,oBAAS,GANhB,mBAM9BuC,EAN8B,KAMdC,EANc,KAQ/BC,EAAU,WACdR,GAAW,IA4Cb,OACE,kBAAC,GAAD,CACE5M,KAAMA,EACNuD,WAAYA,EACZoJ,QAASA,EACTzO,UAAWA,EACXkP,QAASA,EACTC,OAhDW,WACbT,GAAW,IAgDTtJ,SA7Ca,SAACM,GAChB2F,GAAa,GACbY,GACavG,GACVqF,MAAK,YAAe,IAAZ5K,EAAW,EAAXA,KACP4O,EAAS5O,GACTkL,GAAa,MAEdM,OAAM,WACLN,GAAa,OAqCfyB,cArBsB,SAACpH,GACzBiJ,EAAcjJ,IAqBZ0J,aAdiB,SAAChL,GACpB6K,EAAkB7K,IAchBiL,UAnCgB,WAClBvE,GACU,CACN3G,QAAS6K,EACTjN,KAAM6M,IAEP7D,KAAKmE,GACLvD,OAAM,WACLN,GAAa,OA4BfiE,iBApBqB,SAACtO,GACxB6N,EAAe7N,EAAEyE,OAAOC,QAoBtBkJ,YAAaA,EACbI,eAAgBA,EAChBF,MAAOA,OCnELS,I,OAAWC,KAAXD,QACAE,GAAaC,IAAbD,SAEFE,GAAU,SAAC,GAeV,IAdL7N,EAcI,EAdJA,KACA2M,EAaI,EAbJA,QACApJ,EAYI,EAZJA,WACAuJ,EAWI,EAXJA,YACAI,EAUI,EAVJA,eACAhP,EASI,EATJA,UACA8O,EAQI,EARJA,MACAK,EAOI,EAPJA,OACAD,EAMI,EANJA,QACA9J,EAKI,EALJA,SACA0H,EAII,EAJJA,cACAsC,EAGI,EAHJA,aACAE,EAEI,EAFJA,iBACAD,EACI,EADJA,UAEMO,EAAUd,EAAMrO,KAAI,SAACqB,GAAD,OACxB,kBAACyN,GAAD,CAAQnM,IAAKtB,EAAK5B,KAAM4B,EAAKyC,UAG/B,OACE,yBAAK/C,UAAU,iBACb,yBAAKA,UAAU,wBACb,6BACE,kBAACqO,GAAA,EAAD,CAAcjN,MAAO,CAAEC,SAAU,OAEnC,kBAACiN,GAAA,EAAD,CAAcrN,QAAS0M,EAAQvM,MAAO,CAAEC,SAAU,OAGpD,yBAAKrB,UAAU,yBACb,kBAAC,GAAD,CAAS4C,OAAQtC,GAAQA,EAAK5B,OAEhC,kBAAC,KAAD,CACE2F,MAAM,gBACN4I,QAASA,EACTsB,OAAQ,CACN,kBAAC,IAAD,CAAQ3M,IAAI,OAAOX,QAASyM,GAA5B,SAGA,kBAAC,IAAD,CACEc,UAAWpB,EACXxL,IAAI,SACJ9D,KAAK,UACL2Q,QAASjQ,EACTyC,QAAS4M,GALX,YAWF,kBAAC,IAAD,CAAM7N,UAAU,mBACd,kBAAC,IAAKwH,KAAN,CAAWkH,MAAM,qBACf,kBAAC,KAAD,CACExK,MAAOL,EACPD,SAAUA,EACVI,SAAUsH,EACVjF,SAAUuH,EACVe,gBAAiB,KACjBvN,MAAO,CAAEwN,MAAO,QAChBC,0BAA0B,EAC1BC,WAAW,EACXC,cAAc,EACdhL,YAAY,oBACZiL,YAAU,GAETZ,IAGJZ,GACC,kBAAC,IAAKhG,KAAN,CAAWkH,MAAM,mBACf,kBAACT,GAAD,CACEgB,SAAU,CAAEC,QAAS,EAAGC,QAAS,IACjCnL,SAAU8J,EACV5J,MAAOkJ,SAUvBe,GAAQlM,aAAe,CACrBqL,MAAO,IAGMa,U,mBC7Ff,SAASiB,GAAUxG,GACjB,OAAO,IAAIyG,SAAQ,SAACxP,EAASyP,GAC3B,IAAMC,EAAS,IAAIC,WACnBD,EAAOE,cAAc7G,GACrB2G,EAAOG,OAAS,kBAAM7P,EAAQ0P,EAAOI,SACrCJ,EAAOK,QAAU,SAACC,GAAD,OAAWP,EAAOO,OAIvC,IAAMC,GAAc,SAAC,GAAuC,IAArCnP,EAAoC,EAApCA,YAAaoP,EAAuB,EAAvBA,iBAAuB,EAC/B9E,mBAAS,CACjC+E,gBAAgB,EAChBC,aAAc,GACdC,SAAUvP,IAJ6C,mBAClD9C,EADkD,KAC3CsS,EAD2C,KAOzD1E,qBAAU,WACR0E,EAAS,gBACJtS,EADG,CAENqS,SAAUvP,OAGX,CAACA,IAEJ,IAEMyP,EAAa,yCAAG,WAAOxH,GAAP,UAAA2D,EAAA,yDACf3D,EAAK9G,KAAQ8G,EAAKyH,QADH,gCAEGjB,GAAUxG,EAAK0H,eAFlB,OAElB1H,EAAKyH,QAFa,cAKpBF,EAAS,gBACJtS,EADG,CAENoS,aAAcrH,EAAK9G,KAAO8G,EAAKyH,QAC/BL,gBAAgB,KARE,2CAAH,sDAkBnB,OACE,yBAAKhQ,UAAU,YACb,kBAAC,KAAD,CACEuQ,OAAO,mDACPC,SAAS,eACTN,SAAUrS,EAAMqS,SAChBO,UAAWL,EACXpM,SAbe,SAAC,GAAD,IAAGkM,EAAH,EAAGA,SAAH,OACnBC,EAAS,gBACJtS,EADG,CAENqS,eAWEQ,SAAU,SAAC9H,GAAD,OAAUmH,EAAiBnH,MAEvC,kBAAC,KAAD,CACEqE,QAASpP,EAAMmS,eACfzB,OAAQ,KACRoC,SAjCe,kBAAMR,EAAS,gBAAKtS,EAAN,CAAamS,gBAAgB,OAmC1D,yBAAKjO,IAAI,UAAUX,MAAO,CAAEwN,MAAO,QAAU/M,IAAKhE,EAAMoS,kBAMhEH,GAAY7N,aAAe,CACzBtB,YAAa,IAGAmP,UCKAc,GAtEG,SAAC7Q,GAAW,IAE1BuH,EAOEvH,EAPFuH,OACAN,EAMEjH,EANFiH,QACAC,EAKElH,EALFkH,OACAG,EAIErH,EAJFqH,aACAC,EAGEtH,EAHFsH,WACAwJ,EAEE9Q,EAFF8Q,aACAC,EACE/Q,EADF+Q,aAGF,OACE,6BACE,yBAAK9Q,UAAU,aACb,qDAEF,kBAAC,EAAD,KACE,kBAAC,IAAD,CAAM+Q,SAAUF,EAAc7Q,UAAU,cACtC,kBAAC,IAAKwH,KAAN,CACEC,eAAgBC,GAAc,QAASV,EAASC,GAChDY,KAAOb,EAAQgK,MAAc/J,EAAO+J,MAAb,IACvBrJ,aAAW,GAEX,kBAAC,IAAD,CACEvI,GAAG,QACH2E,YAAY,SACZwD,OAAQ,kBAAC0J,EAAA,EAAD,MACR/Q,KAAK,QACLgE,MAAOoD,EAAO0J,MACdhN,SAAUoD,EACVQ,OAAQP,KAGZ,kBAAC,IAAKG,KAAN,CACEC,eAAgBC,GAAc,WAAYV,EAASC,GACnDU,aAAW,EACX3D,SAAUoD,EACVQ,OAAQP,EACRQ,KAAOb,EAAQkK,SAAiBjK,EAAOiK,SAAb,KAE1B,kBAAC,IAAMC,SAAP,CACE/R,GAAG,WACHtB,KAAK,WACLiG,YAAY,WACZwD,OAAQ,kBAAC6J,EAAA,EAAD,MACRlR,KAAK,QACLgE,MAAOoD,EAAO4J,YAGlB,kBAAC,IAAK1J,KAAN,KACE,kBAAC,EAAD,CACE1J,KAAK,UACLuT,SAAS,SACTnR,KAAK,QACLe,QAAS4P,EACTrC,SAAUsC,GALZ,YAWF,kBAAC,IAAD,CAAM9Q,UAAU,sBAAsB6C,GAAG,WAAzC,yBCrEK,eAAiC,IAA9B/D,EAA6B,EAA7BA,OAAQwI,EAAqB,EAArBA,OAAQL,EAAa,EAAbA,OAC1BqK,EAAQ,CACZN,MAAO,SAAC9M,GACDA,EAEO,4CAA4CqN,KAAKrN,KAC3D+C,EAAO+J,MAAQ,sCAFf/J,EAAO+J,MAAQ,yBAKnBjO,MAAO,SAACmB,GACDpF,GAAWoF,IACd+C,EAAOlE,MAAQ,yBAGnBmO,SAAU,SAAChN,EAAOpF,GACXoF,EAIFpF,GACA,+CAA+CyS,KAAKrN,KAErD+C,EAAOiK,SAAWpS,EACd,qBACA,wHARJmI,EAAOiK,SACL,wHAUNM,WAAY,SAACtN,EAAOpF,IACZA,GAAUoF,IAAUoD,EAAO4J,WAAchN,IAC7C+C,EAAOuK,WAAa,6BAK1B5R,OAAOD,KAAK2H,GAAQmK,SAAQ,SAAC7P,GAAD,OAAS0P,EAAM1P,IAAQ0P,EAAM1P,GAAK0F,EAAO1F,Q,4BC9BjE8P,GAAoBtT,OAAOuT,sCAAwCC,KAEnEC,GAAa,CAACC,MAOLC,GALDC,aACZC,WACAP,GAAkBQ,KAAe,WAAf,EAAmBL,MCRxBjB,GCMYuB,YAAW,CACpCC,oBAAoB,EACpBC,iBAAkB,iBAAO,CACvBrB,MAAO,GACPE,SAAU,KAGZoB,SAAU,SAAChL,GACT,IAAIL,EAAS,GAIb,OAFAsL,GAAa,CAAEzT,QAAQ,EAAMwI,SAAQL,WAE9BA,GAET4J,aAAc,SAACvJ,EAAD,GAAuC,IAA5BkL,EAA2B,EAA3BA,cAAezS,EAAY,EAAZA,MACtCgS,GACG5I,SAASsJ,GAAY5H,eAAevD,IACpCiC,MAAK,YACW,YADK,EAAbqB,QAEL7K,EAAM2S,QAAQC,KAAK,KAErBH,GAAc,MAEfrI,OAAM,WACLqI,GAAc,OAGpBI,YAAa,aA3BYT,CA4BxBvB,I,UC6EYiC,I,OAlGM,SAAC9S,GAAW,IAE7BuH,EASEvH,EATFuH,OACAN,EAQEjH,EARFiH,QACAC,EAOElH,EAPFkH,OACAG,EAMErH,EANFqH,aACAC,EAKEtH,EALFsH,WACAwJ,EAIE9Q,EAJF8Q,aACAiC,EAGE/S,EAHF+S,MACAC,EAEEhT,EAFFgT,QACAjC,EACE/Q,EADF+Q,aAGF,OACE,6BACE,yBAAK9Q,UAAU,aACb,6CAEF,kBAAC,EAAD,KAEI,kBAAC,IAAD,CACE+Q,SAAUF,EACVmC,cAAe,CACbC,UAAU,IAGZ,kBAAC,GAAD,CACE9L,KAAK,QACLI,OAAQ,kBAAC0J,EAAA,EAAD,MACR7J,aAAcA,EACdC,WAAYA,EACZL,QAASA,EACTC,OAAQA,EACRK,OAAQA,EACRvD,YAAY,WAEd,kBAAC,GAAD,CACEoD,KAAK,QACLI,OAAQ,kBAAC2L,GAAA,EAAD,MACR9L,aAAcA,EACdC,WAAYA,EACZL,QAASA,EACTC,OAAQA,EACRK,OAAQA,EACRvD,YAAY,UAEd,kBAAC,GAAD,CACEoD,KAAK,WACLI,OAAQ,kBAAC6J,EAAA,EAAD,MACRtT,KAAK,WACLsJ,aAAcA,EACdC,WAAYA,EACZL,QAASA,EACTC,OAAQA,EACRK,OAAQA,EACRvD,YAAY,aAEd,kBAAC,GAAD,CACEoD,KAAK,aACLI,OAAQ,kBAAC6J,EAAA,EAAD,MACRhK,aAAcA,EACdtJ,KAAK,WACLuJ,WAAYA,EACZL,QAASA,EACTC,OAAQA,EACRK,OAAQA,EACRvD,YAAY,qBAGd,kBAAC,IAAKyD,KAAN,KACGsL,IAAUC,GAAW,uCACtB,kBAAC,EAAD,CACE9R,QAAS4P,EACTrC,SAAUsC,EACVhT,KAAK,UACLuT,SAAS,SACTnR,KAAK,SALP,aAUF,kBAAC,IAAD,CAAMF,UAAU,sBAAsB6C,GAAG,WAAzC,gBC9FGgQ,GCMAV,YAAW,CACxBC,oBAAoB,EACpBC,iBAAkB,iBAAO,CACvBrB,MAAO,GACPjO,MAAO,GACPmO,SAAU,GACVM,WAAY,KAEdc,SAAU,SAAChL,GACT,IAAIL,EAAS,GAGb,OAFAsL,GAAa,CAAEzT,QAAQ,EAAOwI,SAAQL,WAE/BA,GAET4J,aAAc,SAACvJ,EAAD,GAAuC,IAA5BkL,EAA2B,EAA3BA,cAAezS,EAAY,EAAZA,MACtCgS,GACG5I,SAASsJ,GAAY3H,kBAAkBxD,IACvCiC,MAAK,YACW,YADK,EAAbqB,QAEL7K,EAAM2S,QAAQC,KAAK,KAErBH,GAAc,MAEfrI,OAAM,WACLqI,GAAc,OAGpBI,YAAa,gBA3BAT,CA4BZU,I,UC0BYM,GAlCQ,SAAC,GAA2B,IAAzB9U,EAAwB,EAAxBA,SAAUqU,EAAc,EAAdA,QAAc,EAChBzH,oBAAS,GADO,mBACzCmI,EADyC,KAC/BC,EAD+B,KAE1C3O,EAAOrG,EAASiV,OAAO/U,MAAM,SAAS,GACtCgV,EAzBe,SAAC7O,EAAM0O,GAC5B,OAAI1O,EACE0O,EACK,CACLxI,OAAQ,UACRnM,QAAS,8BAGJ,CACLmM,OAAQ,QACRnM,QAAS,yBAIN,CACLmM,OAAQ,UACRnM,QACE,sFAQO+U,CAAe9O,EAAM0O,GAYlC,OAVA3H,qBAAU,WACJ/G,GACF+F,GAAmB/F,GAAM6E,MAAK,YACR,YADsB,EAAX5K,KACtBiM,QACPyI,GAAY,SAOlB,kBAAC,EAAD,KACE,kBAAC,KAAD,CACEzI,OAAQ2I,EAAK3I,OACbvG,MAAuB,YAAhBkP,EAAK3I,OAAuB,SAAW,SAC9C6I,SAAUF,EAAK9U,QACfiV,MACkB,YAAhBH,EAAK3I,QACLwI,GACE,kBAAC,IAAD,CAAQtV,KAAK,UAAUmD,QAAS,kBAAMyR,EAAQC,KAAK,aAAnD,eCjCGgB,I,OAZF,WACX,OACE,6BAAS3T,UAAU,QACjB,yBAAKA,UAAU,iBACb,kBAAC,IAAD,CAAO4T,OAAK,EAACC,KAAK,UAAUC,UAAWlD,KACvC,kBAAC,IAAD,CAAOgD,OAAK,EAACC,KAAK,UAAUC,UAAWjB,KACvC,kBAAC,IAAD,CAAOe,OAAK,EAACC,KAAK,iBAAiBC,UAAWC,SCgCvCC,I,OAAAA,YACbjJ,aAAQ,kBAAe,CAAEzK,KAAjB,EAAGA,KAAyB3B,QAASqM,GAA7CD,EApCW,SAAChL,GAAW,IACfmJ,EAAuBnJ,EAAvBmJ,mBAWR,OATAuC,qBAAU,WAAO,IAITjD,EADFzI,EADF1B,SAAYC,SAEYC,MAAM,KAAK0V,MACrC/K,EAAmBV,KAElB,CAACzI,EAAM1B,SAASC,WAGjB,6BAAS0B,UAAU,QACjB,yBAAKA,UAAU,QACb,kBAAC,GAAD,MACA,yBAAKA,UAAU,gBACb,yBAAKA,UAAU,uBACb,8BACA,kBAAC,GAAD,CAAQ4F,QAAM,IAEd,kBAACzE,EAAA,EAAD,CAAkBC,MAAO,CAAEC,SAAU,OAEvC,yBAAKrB,UAAU,yBACb,kBAAC,GAAD,OAEF,yBAAKA,UAAU,sBACb,kBAAC,GAAD,eCZG+K,gBAAQ,kBAAe,CAAEjM,OAAjB,EAAGwB,KAA2BxB,UAAtCiM,EAnBH,SAAChL,GAAW,IACdjB,EAAWiB,EAAXjB,OACR,OACE,yBAAKkB,UAAU,WACb,kBAAC,IAAD,KACE,kBAAC,IAAD,CACE4T,OAAK,EACLC,KAAM,CAAC,UAAW,UAAW,kBAC7BC,UAAWH,KAEb,kBAAC,IAAD,CACEE,KAAK,IACLK,OAAQ,kBAAOpV,EAAS,kBAAC,GAAD,MAAW,kBAAC,IAAD,CAAU+D,GAAG,oB,cCP1DkP,GAAM5I,SAASsJ,GAAYjI,iBAE3B2J,IAASD,OACP,kBAAC,IAAD,CAAUnC,MAAOA,IACf,kBAAC,IAAD,KACE,kBAAC,GAAD,QAIJqC,SAASC,eAAe,U,gCCpB1B,mBAIeC,sBAFE,CAAC,WAAY,UAAW,QAG9BC,QAAO,SAACC,EAASrN,GAExB,OADAqN,EAAQrN,GAAQsN,OAAQ,YAAKtN,IAAQuN,QAC9BF,IACN,O","file":"static/js/main.b42ffd09.chunk.js","sourcesContent":["const initialState = {\r\n  items: [],\r\n}\r\n\r\nexport default (state = initialState, { type, payload }) => {\r\n  switch (type) {\r\n    case \"ATTACHMENTS:SET_ITEMS\":\r\n      return {\r\n        ...state,\r\n        items: payload,\r\n      }\r\n    case \"ATTACHMENTS:REMOVE_ITEM\":\r\n      return {\r\n        ...state,\r\n        items: state.items.filter((item) => item.uid !== payload.uid),\r\n      }\r\n    default:\r\n      return state\r\n  }\r\n}\r\n","const initialState = {\r\n  items: [],\r\n  currentDialogId: window.location.pathname.split(\"dialog/\")[1],\r\n  isLoading: false,\r\n}\r\n\r\nexport default (state = initialState, { type, payload }) => {\r\n  switch (type) {\r\n    case \"DIALOGS:SET_ITEMS\":\r\n      return {\r\n        ...state,\r\n        items: payload,\r\n      }\r\n    case \"DIALOGS:SET_CURRENT_DIALOG_ID\":\r\n      return {\r\n        ...state,\r\n        currentDialogId: payload,\r\n      }\r\n    default:\r\n      return state\r\n  }\r\n}\r\n","const initialState = {\r\n  items: [],\r\n  isLoading: false,\r\n}\r\n\r\nexport default (state = initialState, { type, payload }) => {\r\n  switch (type) {\r\n    case \"MESSAGES:ADD_MESSAGE\":\r\n      return {\r\n        ...state,\r\n        items: [...state.items, payload],\r\n      }\r\n    case \"MESSAGES:SET_ITEMS\":\r\n      return {\r\n        ...state,\r\n        items: payload,\r\n        isLoading: false,\r\n      }\r\n    case \"MESSAGES:REMOVE_MESSAGE\":\r\n      return {\r\n        ...state,\r\n        items: [...state.items.filter((message) => message._id !== payload)],\r\n      }\r\n    case \"MESSAGES:SET_IS_LOADING\":\r\n      return {\r\n        ...state,\r\n        isLoading: payload,\r\n      }\r\n    default:\r\n      return state\r\n  }\r\n}\r\n","const initialState = {\r\n  data: null,\r\n  token: window.localStorage.token,\r\n  isAuth: !!window.localStorage.token,\r\n}\r\n\r\nexport default (state = initialState, { type, payload }) => {\r\n  switch (type) {\r\n    case \"USER:SET_DATA\":\r\n      return {\r\n        ...state,\r\n        data: payload,\r\n        isAuth: true,\r\n        token: window.localStorage.token,\r\n      }\r\n    case \"USER:SET_IS_AUTH\":\r\n      return {\r\n        ...state,\r\n        isAuth: payload,\r\n      }\r\n    default:\r\n      return state\r\n  }\r\n}\r\n","module.exports = __webpack_public_path__ + \"static/media/readed.2da46147.svg\";","module.exports = __webpack_public_path__ + \"static/media/noreaded.1456f013.svg\";","var map = {\n\t\"./\": 99,\n\t\"./attachments\": 238,\n\t\"./attachments.js\": 238,\n\t\"./dialogs\": 239,\n\t\"./dialogs.js\": 239,\n\t\"./index\": 99,\n\t\"./index.js\": 99,\n\t\"./messages\": 240,\n\t\"./messages.js\": 240,\n\t\"./user\": 241,\n\t\"./user.js\": 241\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 544;","import React from \"react\"\r\nimport { Button as BaseButton } from \"antd\"\r\nimport PropTypes from \"prop-types\"\r\nimport classNames from \"classnames\"\r\n\r\nimport \"./Button.scss\"\r\n\r\nconst Button = (props) => {\r\n  return (\r\n    <BaseButton\r\n      className={classNames(\"button\", props.className, {\r\n        \"button--large\": props.size === \"large\",\r\n      })}\r\n      {...props}\r\n    />\r\n  )\r\n}\r\n\r\nButton.propTypes = {\r\n  className: PropTypes.string,\r\n}\r\n\r\nexport default Button\r\n","import React from \"react\";\r\nimport classNames from \"classnames\";\r\n\r\nimport \"./Block.scss\";\r\n\r\nconst Block = ({ children, className }) => {\r\n  return <div className={classNames(\"block\", className)}>{children}</div>;\r\n};\r\n\r\nexport default Block;\r\n","import React from \"react\"\r\nimport PropTypes from \"prop-types\"\r\nimport classNames from \"classnames\"\r\nimport reactStringReplace from \"react-string-replace\"\r\nimport { Emoji } from \"emoji-mart\"\r\n\r\nimport { Popover, Button } from \"antd\"\r\nimport { EllipsisOutlined } from \"@ant-design/icons\"\r\n\r\nimport \"./Message.scss\"\r\nimport { Time, IconReaded, Avatar } from \"../\"\r\n\r\nconst Message = ({\r\n  user,\r\n  text,\r\n  date,\r\n  isMe,\r\n  readed,\r\n  attachments,\r\n  isTyping,\r\n  onRemoveMessage,\r\n}) => (\r\n  <div\r\n    className={classNames(\"message\", {\r\n      \"message--isme\": isMe,\r\n      \"message--is-typing\": isTyping,\r\n      \"message--image\": attachments && attachments.length === 1,\r\n    })}\r\n  >\r\n    <div className=\"message__content\">\r\n      <IconReaded isMe={isMe} isReaded={readed} />\r\n      <Popover\r\n        content={\r\n          <div>\r\n            <Button onClick={onRemoveMessage}>Delete message</Button>\r\n          </div>\r\n        }\r\n        trigger=\"click\"\r\n      >\r\n        <div className=\"message__icon-actions\">\r\n          <EllipsisOutlined style={{ fontSize: 20 }} />\r\n        </div>\r\n      </Popover>\r\n      <div className=\"message__avatar\">\r\n        <Avatar user={user} />\r\n      </div>\r\n      <div className=\"message__info\">\r\n        {(text || isTyping) && (\r\n          <div className=\"message__bubble\">\r\n            {text && (\r\n              <p className=\"message__text\">\r\n                {reactStringReplace(text, /:(.+?):/g, (match, i) => (\r\n                  <Emoji emoji={match} set=\"apple\" size={16} />\r\n                ))}\r\n              </p>\r\n            )}\r\n            {isTyping && (\r\n              <div className=\"message__typing\">\r\n                <span></span>\r\n                <span></span>\r\n                <span></span>\r\n              </div>\r\n            )}\r\n          </div>\r\n        )}\r\n        <div className=\"message__attachments\">\r\n          {attachments &&\r\n            attachments.map((item, index) => (\r\n              <div key={index} className=\"message__attachments-item\">\r\n                <img src={item.url} alt={item.filename} />\r\n              </div>\r\n            ))}\r\n        </div>\r\n        {date && (\r\n          <span className=\"message__date\">\r\n            <Time date={date} />\r\n          </span>\r\n        )}\r\n      </div>\r\n    </div>\r\n  </div>\r\n)\r\n\r\nMessage.defaultProps = {\r\n  user: {},\r\n}\r\n\r\nMessage.propTypes = {\r\n  avatar: PropTypes.string,\r\n  text: PropTypes.string,\r\n  date: PropTypes.string,\r\n  user: PropTypes.object,\r\n  attachments: PropTypes.array,\r\n  isTyping: PropTypes.bool,\r\n  isMe: PropTypes.bool,\r\n  isReaded: PropTypes.bool,\r\n}\r\n\r\nexport default Message\r\n","import React from \"react\"\r\nimport PropTypes from \"prop-types\"\r\nimport { Empty, Spin } from \"antd\"\r\nimport classNames from \"classnames\"\r\n\r\nimport { Message } from \"../index\"\r\nimport \"./Messages.scss\"\r\n\r\nconst Messages = ({ blockRef, isLoading, items, user, onRemoveMessage }) => {\r\n  return (\r\n    <div\r\n      ref={blockRef}\r\n      className={classNames(\"messages\", { \"messages--loading\": isLoading })}\r\n    >\r\n      {isLoading ? (\r\n        <Spin size=\"large\" tip=\"Messages are loading\" />\r\n      ) : items && !isLoading ? (\r\n        items.length > 0 ? (\r\n          items.map((item) => (\r\n            <Message\r\n              key={item._id}\r\n              {...item}\r\n              isMe={user._id === item.user._id}\r\n              onRemoveMessage={onRemoveMessage.bind(this, item._id)}\r\n            />\r\n          ))\r\n        ) : (\r\n          <Empty description=\"Dialog is empty\" />\r\n        )\r\n      ) : (\r\n        <Empty description=\"Open dialog\" />\r\n      )}\r\n    </div>\r\n  )\r\n}\r\n\r\nMessages.propTypes = {\r\n  items: PropTypes.array,\r\n}\r\n\r\nexport default Messages\r\n","import React from \"react\"\r\nimport classNames from \"classnames\"\r\nimport format from \"date-fns/format\"\r\nimport isToday from \"date-fns/is_today\"\r\nimport { Link } from \"react-router-dom\"\r\n\r\nimport \"./DialogItem.scss\"\r\nimport { IconReaded, Avatar } from \"../\"\r\n\r\nconst getMessageTime = (createdAt) => {\r\n  if (isToday(createdAt)) {\r\n    return format(createdAt, \"HH:mm\")\r\n  } else {\r\n    return format(createdAt, \"DD.MM.YYYY\")\r\n  }\r\n}\r\n\r\nconst DialogItem = ({\r\n  _id,\r\n  isMe,\r\n  currentDialogId,\r\n  lastMessage,\r\n  partner,\r\n  userId,\r\n}) => (\r\n  <Link to={`/dialog/${_id}`}>\r\n    <div\r\n      className={classNames(\"dialogs__item\", {\r\n        \"dialogs__item--online\": partner.isOnline,\r\n        \"dialogs__item--selected\": currentDialogId === _id,\r\n      })}\r\n    >\r\n      <div className=\"dialogs__item-avatar\">\r\n        <Avatar user={lastMessage.user} />\r\n      </div>\r\n      <div className=\"dialogs__item-info\">\r\n        <div className=\"dialogs__item-info-top\">\r\n          <b>{partner.login}</b>\r\n          <span>{getMessageTime(lastMessage.createdAt)}</span>\r\n        </div>\r\n        <div className=\"dialogs__item-info-bottom\">\r\n          <p>\r\n            {lastMessage.user._id === userId\r\n              ? `You: ${lastMessage.text}`\r\n              : `${partner.login}: ${lastMessage.text}`}\r\n          </p>\r\n          {isMe && <IconReaded isMe={isMe} isReaded={lastMessage.readed} />}\r\n          {lastMessage.undread > 0 && (\r\n            <div className=\"dialogs__item-info-bottom-count\">\r\n              {lastMessage.undread > 9 ? \"+9\" : lastMessage.undread}\r\n            </div>\r\n          )}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </Link>\r\n)\r\n\r\nexport default DialogItem\r\n","import React, { Fragment } from \"react\"\r\nimport distanceInWordsToNow from \"date-fns/distance_in_words_to_now\"\r\nimport enLocale from \"date-fns/locale/en\"\r\n\r\nconst Time = ({ date }) => (\r\n  <Fragment>\r\n    {distanceInWordsToNow(date, { addSuffix: true, locale: enLocale })}\r\n  </Fragment>\r\n)\r\n\r\n/* Time.propTypes = {\r\n  date: PropTypes.string,\r\n} */\r\n\r\nexport default Time\r\n","import React from \"react\"\r\nimport PropTypes from \"prop-types\"\r\n\r\nimport readedSvg from \"../../assets/img/readed.svg\"\r\nimport noReadedSvg from \"../../assets/img/noreaded.svg\"\r\n\r\nconst IconReaded = ({ isMe, isReaded }) =>\r\n  (isMe &&\r\n    (isReaded ? (\r\n      <img className=\"message__icon-readed\" src={readedSvg} alt=\"Readed icon\" />\r\n    ) : (\r\n      <img\r\n        className=\"message__icon-readed message__icon-readed--no\"\r\n        src={noReadedSvg}\r\n        alt=\"No readed icon\"\r\n      />\r\n    ))) ||\r\n  null;\r\n\r\nIconReaded.propTypes = {\r\n  isMe: PropTypes.bool,\r\n  isReaded: PropTypes.bool,\r\n}\r\n\r\nexport default IconReaded\r\n","import React from \"react\"\r\nimport orderBy from \"lodash/orderBy\"\r\nimport { Input } from \"antd\"\r\n\r\nimport \"./Dialogs.scss\"\r\nimport { DialogItem } from \"../\"\r\n\r\nconst Dialogs = ({ items, userId, onSearch, inputValue, currentDialogId }) => (\r\n  <div className=\"dialogs\">\r\n    <div className=\"dialogs__search\">\r\n      <Input.Search\r\n        placeholder=\"Search\"\r\n        onChange={(e) => onSearch(e.target.value)}\r\n        value={inputValue}\r\n      />\r\n    </div>\r\n    {orderBy(items, [\"created_at\"], [\"desc\"]).map((item) => (\r\n      <DialogItem\r\n        key={item._id}\r\n        isMe={item.author._id === userId}\r\n        userId={userId}\r\n        currentDialogId={currentDialogId}\r\n        {...item}\r\n      />\r\n    ))}\r\n  </div>\r\n)\r\n\r\nexport default Dialogs\r\n","import { notification } from \"antd\"\r\n\r\nexport default ({ text, type = \"info\", title, duration = 2 }) => {\r\n  notification[type]({\r\n    message: title,\r\n    description: text,\r\n    duration: duration,\r\n  })\r\n}\r\n","import React from \"react\"\r\n\r\nimport \"./Avatar.scss\"\r\nimport { generateAvatarFromHash } from \"../../utils/helpers/helpers\"\r\n\r\nconst Avatar = ({ user }) => {\r\n  if (user.avatar) {\r\n    return <img src={user.avatar} alt=\"avatar\" />\r\n  } else {\r\n    const { color, colorLighten } = generateAvatarFromHash(user._id)\r\n\r\n    const firstChar = user.login[0]\r\n    return (\r\n      <div\r\n        style={{\r\n          background: `linear-gradient(135deg, ${color} 0%, ${colorLighten} 96%)`,\r\n        }}\r\n        className=\"avatar avatar-symbol\"\r\n      >\r\n        {firstChar}\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default Avatar\r\n","import tinycolor from \"tinycolor2\"\r\n\r\nconst getCorrectIndex = (number) => {\r\n  if (number > 255) {\r\n    return 255\r\n  }\r\n  if (number < 0) {\r\n    return 0\r\n  }\r\n  return number > 255 ? 255 : number < 0 ? 0 : number\r\n}\r\n\r\nexport default (hash) => {\r\n  const [r, g, b] = hash\r\n    .substr(0, 3)\r\n    .split(\"\")\r\n    .map((char) => getCorrectIndex(char.charCodeAt(0)))\r\n\r\n  return {\r\n    color: tinycolor({ r, g, b }).lighten(10).saturate(10).toHexString(),\r\n    colorLighten: tinycolor({ r, g, b }).lighten(30).saturate(30).toHexString(),\r\n  }\r\n}\r\n","import React from \"react\"\r\nimport PropTypes from \"prop-types\"\r\nimport classNames from \"classnames\"\r\n\r\nimport \"./status.scss\"\r\n\r\nconst Status = ({ online, login }) => (\r\n  <div className=\"chat__dialog-header-center\">\r\n    <b className=\"chat__dialog-header-username\">{login}</b>\r\n    <div className=\"chat__dialog-header-status\">\r\n      <div className={classNames(\"status\", { \"status--online\": online })}>\r\n        {online ? \"online\" : \"offline\"}\r\n      </div>\r\n    </div>\r\n  </div>\r\n)\r\n\r\nStatus.propTypes = {\r\n  online: PropTypes.bool,\r\n}\r\n\r\nexport default Status\r\n","import React, { Fragment } from \"react\"\r\nimport PropTypes from \"prop-types\"\r\nimport { SmileOutlined, CameraOutlined, SendOutlined } from \"@ant-design/icons\"\r\nimport { Input } from \"antd\"\r\nimport { UploadField } from \"@navjobs/upload\"\r\nimport { Picker } from \"emoji-mart\"\r\n\r\nimport { UploadFiles } from \"../\"\r\nimport \"./ChatInput.scss\"\r\n\r\nconst ChatInput = (props) => {\r\n  const {\r\n    emojiPickerVisible,\r\n    value,\r\n    setValue,\r\n    addEmoji,\r\n    handleSendMessage,\r\n    toggleEmojiPicker,\r\n    sendMessage,\r\n    attachments,\r\n    onSelectFiles,\r\n  } = props\r\n\r\n  return (\r\n    <Fragment>\r\n      <div className=\"chat-input\">\r\n        <div className=\"chat-input__smile-btn\">\r\n          {emojiPickerVisible && (\r\n            <div className=\"chat-input__emoji-picker\">\r\n              <Picker\r\n                set=\"apple\"\r\n                onSelect={(emojiTag) => {\r\n                  addEmoji(emojiTag)\r\n                }}\r\n              />\r\n            </div>\r\n          )}\r\n          <SmileOutlined onClick={toggleEmojiPicker} />\r\n        </div>\r\n\r\n        <Input\r\n          size=\"large\"\r\n          placeholder=\"Write a message...\"\r\n          onChange={(e) => setValue(e.target.value)}\r\n          onKeyUp={handleSendMessage}\r\n          value={value}\r\n        />\r\n        <div className=\"chat-input__actions\">\r\n          <UploadField\r\n            onFiles={onSelectFiles}\r\n            containerProps={{\r\n              className: \"chat-input__actions-upload-btn\",\r\n            }}\r\n            uploadProps={{\r\n              accept: \".jpg,.png,.jpeg,.gif,.bmp\",\r\n              multiple: \"multiple\",\r\n            }}\r\n          >\r\n            <CameraOutlined />\r\n          </UploadField>\r\n\r\n          <SendOutlined onClick={sendMessage} />\r\n        </div>\r\n      </div>\r\n      <UploadFiles attachments={attachments} />\r\n    </Fragment>\r\n  )\r\n}\r\n\r\nChatInput.propTypes = {\r\n  className: PropTypes.string,\r\n}\r\n\r\nexport default ChatInput\r\n"," export default (key, touched, errors) => {\r\n  if (touched[key]) {\r\n    if (errors[key]) {\r\n      return \"error\"\r\n    }\r\n    return \"success\"\r\n  }\r\n  return \" \"\r\n}","import React from \"react\"\r\nimport { Form, Input } from \"antd\"\r\n\r\nimport validateField from \"../../utils/helpers/validateField\"\r\n\r\nconst FormField = ({\r\n  name,\r\n  placeholder,\r\n  touched,\r\n  errors,\r\n  handleChange,\r\n  handleBlur,\r\n  values,\r\n  prefix,\r\n  type,\r\n}) => {\r\n  return (\r\n    <Form.Item\r\n      validateStatus={validateField(name, touched, errors)}\r\n      hasFeedback\r\n      onChange={handleChange}\r\n      onBlur={handleBlur}\r\n      help={!touched[name] ? \" \" : errors[name]}\r\n    >\r\n      <Input\r\n        id={name}\r\n        placeholder={placeholder}\r\n        prefix={prefix}\r\n        size=\"large\"\r\n        value={values[name]}\r\n        type={type}\r\n      />\r\n    </Form.Item>\r\n  )\r\n}\r\n\r\nexport default FormField\r\n","import io from \"socket.io-client\"\r\n\r\nconst socket = io(\"https://react-messenger-applicaton.herokuapp.com/\")\r\n\r\nexport default socket\r\n","import axios from \"axios\"\r\n\r\naxios.defaults.baseURL = \"https://react-messenger-applicaton.herokuapp.com/\"\r\naxios.defaults.headers.common[\"token\"] = window.localStorage.token\r\n\r\nwindow.axios = axios\r\n\r\nexport default axios\r\n","import { axios } from \"../../core/index\"\r\n\r\nexport default {\r\n  getAll: () => axios.get(\"/dialogs\"),\r\n  create: ({ partner, text }) => axios.post(\"/dialogs\", { partner, text }),\r\n}\r\n","import { axios } from \"../../core/index\"\r\n\r\nexport default {\r\n  getAllByDialogId: (id) => axios.get(\"/messages?dialog=\" + id),\r\n  removeById: (id) => axios.delete(\"/messages?id=\" + id),\r\n  send: (text, dialogId, attachments) =>\r\n    axios.post(\"/messages\", {\r\n      text: text,\r\n      dialog_id: dialogId,\r\n      attachments,\r\n    }),\r\n}\r\n","import { axios } from \"../../core/index\"\r\n\r\nexport default {\r\n  signIn: (postData) => axios.post(\"/user/signin\", postData),\r\n  signUp: (postData) => axios.post(\"/user/signup\", postData),\r\n  verifyHash: (hash) => axios.get(\"/user/verify?hash=\" + hash),\r\n  getMe: () => axios.get(\"/user/me\"),\r\n  findUsers: (query) => axios.get(\"/user/find?query=\" + query),\r\n}\r\n","import { axios } from \"../../core/\"\r\n\r\nexport default {\r\n  upload: (file) => {\r\n    const formData = new FormData()\r\n    formData.append(\"file\", file)\r\n    return axios.post(\"/files\", formData, {\r\n      headers: {\r\n        \"Content-Type\": \"multipart/form-data\",\r\n      },\r\n    })\r\n  },\r\n}\r\n","import { dialogsApi } from \"../../utils/api\"\r\nimport socket from \"../../core/socket\"\r\n\r\nconst actions = {\r\n  setDialogs: (items) => ({\r\n    type: \"DIALOGS:SET_ITEMS\",\r\n    payload: items,\r\n  }),\r\n  setCurrentDialogId: (id) => (dispatch) => {\r\n    socket.emit(\"DIALOGS:JOIN\", id)\r\n    dispatch({\r\n      type: \"DIALOGS:SET_CURRENT_DIALOG_ID\",\r\n      payload: id,\r\n    })\r\n  },\r\n  fetchDialogs: () => (dispatch) => {\r\n    dialogsApi.getAll().then(({ data }) => {\r\n      dispatch(actions.setDialogs(data))\r\n    })\r\n  },\r\n}\r\n\r\nexport default actions\r\n","import { messagesApi } from \"../../utils/api\"\r\n\r\nconst actions = {\r\n  setMessages: (items) => ({\r\n    type: \"MESSAGES:SET_ITEMS\",\r\n    payload: items,\r\n  }),\r\n  addMessage: (message) => (dispatch, getState) => {\r\n    const { dialogs } = getState()\r\n    const { currentDialogId } = dialogs\r\n\r\n    if (currentDialogId === message.dialog._id) {\r\n      dispatch({\r\n        type: \"MESSAGES:ADD_MESSAGE\",\r\n        payload: message,\r\n      })\r\n    }\r\n  },\r\n  setIsLoading: (bool) => ({\r\n    type: \"MESSAGES:SET_IS_LOADING\",\r\n    payload: bool,\r\n  }),\r\n  removeMessageById: (id) => (dispatch) => {\r\n    console.log(id)\r\n    messagesApi\r\n      .removeById(id)\r\n      .then(({ data }) => {\r\n        dispatch({ type: \"MESSAGES:REMOVE_MESSAGE\", payload: id })\r\n      })\r\n      .catch(() => {\r\n        dispatch(actions.setIsLoading(false))\r\n      })\r\n  },\r\n  fetchSendMessage: (text, dialogId, attachments) => (dispatch) => {\r\n    messagesApi.send(text, dialogId, attachments)\r\n  },\r\n  fetchMessages: (dialogId) => (dispatch) => {\r\n    dispatch(actions.setIsLoading(true))\r\n    messagesApi\r\n      .getAllByDialogId(dialogId)\r\n      .then(({ data }) => {\r\n        dispatch(actions.setMessages(data))\r\n      })\r\n      .catch(() => {\r\n        dispatch(actions.setIsLoading(false))\r\n      })\r\n  },\r\n}\r\n\r\nexport default actions\r\n","import { userApi } from \"../../utils/api\"\r\nimport { notification } from \"../../utils/helpers/helpers\"\r\n\r\nconst actions = {\r\n  setUserData: (data) => ({\r\n    type: \"USER:SET_DATA\",\r\n    payload: data,\r\n  }),\r\n  setIsAuth: (bool) => ({\r\n    type: \"USER:SET_IS_AUTH\",\r\n    payload: bool,\r\n  }),\r\n  fetchUserData: () => (dispatch) => {\r\n    userApi\r\n      .getMe()\r\n      .then(({ data }) => {\r\n        dispatch(actions.setUserData(data))\r\n      })\r\n      .catch((err) => {\r\n        if (err.response.status === 403) {\r\n          dispatch(actions.setIsAuth(false))\r\n          delete window.localStorage.token\r\n        }\r\n      })\r\n  },\r\n  fetchUserLogin: (postData) => (dispatch) => {\r\n    return userApi\r\n      .signIn(postData)\r\n      .then(({ data }) => {\r\n        const { token } = data\r\n        notification({\r\n          title: \"Success\",\r\n          text: \"Authorization has been successful.\",\r\n          type: \"success\",\r\n        })\r\n        window.axios.defaults.headers.common[\"token\"] = token\r\n        window.localStorage[\"token\"] = token\r\n        dispatch(actions.fetchUserData())\r\n        dispatch(actions.setIsAuth(true))\r\n        return data\r\n      })\r\n      .catch(({ response }) => {\r\n        if (response.status === 403) {\r\n          notification({\r\n            title: \"Authentication failed.\",\r\n            text: \"Incorrect login or password.\",\r\n            type: \"error\",\r\n          })\r\n        }\r\n      })\r\n  },\r\n  fetchUserRegister: (postData) => (dispatch) => {\r\n    return userApi.signUp(postData).then(({ data }) => {\r\n      return data\r\n    })\r\n  },\r\n}\r\n\r\nexport default actions\r\n","import React, { useState, useEffect } from \"react\"\r\nimport { connect } from \"react-redux\"\r\n\r\nimport socket from \"../core/socket\"\r\nimport { dialogsActions } from \"../redux/actions\"\r\nimport { Dialogs as BaseDialogs } from \"../components\"\r\n\r\nconst Dialogs = ({ fetchDialogs, currentDialogId, items, userId }) => {\r\n  const [inputValue, setValue] = useState(\"\")\r\n  const [filtred, setFiltredItems] = useState(Array.from(items))\r\n  const onChangeInput = (value = \"\") => {\r\n    setFiltredItems(\r\n      items.filter(\r\n        (dialog) =>\r\n          dialog.author.login.toLowerCase().indexOf(value.toLowerCase()) >= 0 ||\r\n          dialog.partner.login.toLowerCase().indexOf(value.toLowerCase()) >= 0\r\n      )\r\n    )\r\n    setValue(value)\r\n  }\r\n\r\n  useEffect(() => {\r\n    if (items.length) {\r\n      onChangeInput()\r\n    }\r\n    // eslint-disable-next-line\r\n  }, [items])\r\n\r\n  useEffect(() => {\r\n    fetchDialogs()\r\n\r\n    socket.on(\"SERVER:DIALOG_CREATED\", fetchDialogs)\r\n    socket.on(\"SERVER:NEW_MESSAGE\", fetchDialogs)\r\n\r\n    return () => {\r\n      socket.removeListener(\"SERVER:DIALOG_CREATED\", fetchDialogs)\r\n      socket.removeListener(\"SERVER:NEW_MESSAGE\", fetchDialogs)\r\n    }\r\n    // eslint-disable-next-line\r\n  }, [])\r\n\r\n  return (\r\n    <BaseDialogs\r\n      userId={userId}\r\n      items={filtred}\r\n      onSearch={onChangeInput}\r\n      inputValue={inputValue}\r\n      currentDialogId={currentDialogId}\r\n    />\r\n  )\r\n}\r\n\r\nexport default connect(({ dialogs }) => dialogs, dialogsActions)(Dialogs)\r\n","import React, { useEffect, useRef } from \"react\"\r\nimport { connect } from \"react-redux\"\r\nimport { Empty } from \"antd\"\r\n\r\nimport socket from \"../core/socket\"\r\nimport { messagesActions } from \"../redux/actions\"\r\nimport { Messages as BaseMessages } from \"../components\"\r\n\r\nconst Dialogs = ({\r\n  currentDialogId,\r\n  fetchMessages,\r\n  addMessage,\r\n  items,\r\n  user,\r\n  isLoading,\r\n  removeMessageById,\r\n}) => {\r\n  const messagesRef = useRef(null)\r\n\r\n  const onNewMessage = (data) => {\r\n    addMessage(data)\r\n  }\r\n\r\n  useEffect(() => {\r\n    if (currentDialogId) {\r\n      fetchMessages(currentDialogId)\r\n    }\r\n\r\n    socket.on(\"SERVER:NEW_MESSAGE\", onNewMessage)\r\n\r\n    return () => socket.removeListener(\"SERVER:NEW_MESSAGE\", onNewMessage)\r\n    // eslint-disable-next-line\r\n  }, [currentDialogId])\r\n\r\n  useEffect(() => {\r\n    if (messagesRef.current) {\r\n      messagesRef.current.scrollTo(0, messagesRef.current.scrollHeight)\r\n    }\r\n  }, [items])\r\n\r\n  return currentDialogId ? (\r\n    <BaseMessages\r\n      user={user}\r\n      blockRef={messagesRef}\r\n      items={items}\r\n      isLoading={isLoading && !user}\r\n      onRemoveMessage={removeMessageById}\r\n    />\r\n  ) : (\r\n    <Empty description=\"Open dialog\" />\r\n  )\r\n}\r\n\r\nexport default connect(\r\n  ({ dialogs, messages, user }) => ({\r\n    currentDialogId: dialogs.currentDialogId,\r\n    items: messages.items,\r\n    isLoading: messages.isLoading,\r\n    user: user.data,\r\n  }),\r\n  messagesActions\r\n)(Dialogs)\r\n","import React, { useState } from \"react\"\r\nimport { connect } from \"react-redux\"\r\n\r\nimport { messagesActions } from \"../redux/actions\"\r\nimport { ChatInput as ChatInputBase } from \"../components\"\r\nimport { filesApi } from \"../utils/api\"\r\n\r\nconst ChatInput = ({ fetchSendMessage, currentDialogId }) => {\r\n  const [value, setValue] = useState(\"\")\r\n  const [attachments, setAttachments] = useState([])\r\n  const [emojiPickerVisible, setShowEmojiPicker] = useState(\"\")\r\n\r\n  const toggleEmojiPicker = () => {\r\n    setShowEmojiPicker(!emojiPickerVisible)\r\n  }\r\n\r\n  const addEmoji = ({ colons }) => {\r\n    setValue((value + \" \" + colons).trim())\r\n  }\r\n\r\n  const sendMessage = () => {\r\n    fetchSendMessage(\r\n      value,\r\n      currentDialogId,\r\n      attachments.map((file) => file.uid)\r\n    )\r\n    setAttachments([])\r\n    setValue(\"\")\r\n  }\r\n\r\n  const handleSendMessage = (e) => {\r\n    if (e.keyCode === 13 && value.trim()) {\r\n      sendMessage()\r\n    }\r\n  }\r\n\r\n  const onSelectFiles = async (files) => {\r\n    let uploaded = []\r\n    for (let i = 0; i < files.length; i++) {\r\n      const file = files[i]\r\n      const uid = Math.round(Math.random() * 1000)\r\n      uploaded = [\r\n        ...uploaded,\r\n        {\r\n          uid,\r\n          name: file.name,\r\n          status: \"uploading\",\r\n        },\r\n      ]\r\n      setAttachments(uploaded)\r\n      // eslint-disable-next-line no-loop-func\r\n      await filesApi.upload(file).then(({ data }) => {\r\n        uploaded = uploaded.map((item) => {\r\n          if (item.uid === uid) {\r\n            return {\r\n              status: \"done\",\r\n              uid: data.file._id,\r\n              name: data.file.filename,\r\n              url: data.file.url,\r\n            }\r\n          }\r\n          return item\r\n        })\r\n      })\r\n    }\r\n    setAttachments(uploaded)\r\n  }\r\n\r\n  if (!currentDialogId) {\r\n    return null\r\n  }\r\n\r\n  return (\r\n    <ChatInputBase\r\n      value={value}\r\n      setValue={setValue}\r\n      emojiPickerVisible={emojiPickerVisible}\r\n      toggleEmojiPicker={toggleEmojiPicker}\r\n      handleSendMessage={handleSendMessage}\r\n      addEmoji={addEmoji}\r\n      sendMessage={sendMessage}\r\n      attachments={attachments}\r\n      onSelectFiles={onSelectFiles}\r\n    />\r\n  )\r\n}\r\n\r\nexport default connect(({ dialogs }) => dialogs, messagesActions)(ChatInput)\r\n","import React from \"react\"\r\nimport { Status as StatusBase } from \"../components\"\r\nimport { connect } from \"react-redux\"\r\n\r\nconst Status = ({ currentDialogId, user, dialogs }) => {\r\n  if (!dialogs.length || !currentDialogId) {\r\n    return null\r\n  }\r\n\r\n  const currentDialogObj = dialogs.filter(\r\n    (dialog) => dialog._id === currentDialogId\r\n  )[0]\r\n\r\n  let partner = {}\r\n\r\n  if (currentDialogObj.author._id === user._id) {\r\n    partner = currentDialogObj.partner\r\n  } else {\r\n    partner = currentDialogObj.author\r\n  }\r\n\r\n  return <StatusBase online={partner.isOnline} login={partner.login} />\r\n}\r\n\r\nexport default connect(({ dialogs, user }) => ({\r\n  dialogs: dialogs.items,\r\n  currentDialogId: dialogs.currentDialogId,\r\n  user: user.data,\r\n}))(Status)\r\n","import React, { useState } from \"react\"\r\nimport { connect } from \"react-redux\"\r\n\r\nimport { userApi, dialogsApi } from \"../utils/api\"\r\nimport { Sidebar } from \"../components\"\r\n\r\nconst SidebarContainer = ({ user }) => {\r\n  const [visible, setVisible] = useState(false)\r\n  const [inputValue, setInputValue] = useState(\"\")\r\n  const [messageText, setMessagaText] = useState(\"\")\r\n  const [users, setUsers] = useState([])\r\n  const [isLoading, setIsLoading] = useState(false)\r\n  const [selectedUserId, setSelectedUserId] = useState(false)\r\n\r\n  const onClose = () => {\r\n    setVisible(false)\r\n  }\r\n\r\n  const onShow = () => {\r\n    setVisible(true)\r\n  }\r\n\r\n  const onSearch = (value) => {\r\n    setIsLoading(true)\r\n    userApi\r\n      .findUsers(value)\r\n      .then(({ data }) => {\r\n        setUsers(data)\r\n        setIsLoading(false)\r\n      })\r\n      .catch(() => {\r\n        setIsLoading(false)\r\n      })\r\n  }\r\n\r\n  const onAddDialog = () => {\r\n    dialogsApi\r\n      .create({\r\n        partner: selectedUserId,\r\n        text: messageText,\r\n      })\r\n      .then(onClose)\r\n      .catch(() => {\r\n        setIsLoading(false)\r\n      })\r\n  }\r\n\r\n  const handleChangeInput = (value) => {\r\n    setInputValue(value)\r\n  }\r\n\r\n  const onChangeTextArea = (e) => {\r\n    setMessagaText(e.target.value)\r\n  }\r\n\r\n  const onSelectUser = (userId) => {\r\n    setSelectedUserId(userId)\r\n  }\r\n\r\n  return (\r\n    <Sidebar\r\n      user={user}\r\n      inputValue={inputValue}\r\n      visible={visible}\r\n      isLoading={isLoading}\r\n      onClose={onClose}\r\n      onShow={onShow}\r\n      onSearch={onSearch}\r\n      onChangeInput={handleChangeInput}\r\n      onSelectUser={onSelectUser}\r\n      onModalOk={onAddDialog}\r\n      onChangeTextArea={onChangeTextArea}\r\n      messageText={messageText}\r\n      selectedUserId={selectedUserId}\r\n      users={users}\r\n    />\r\n  )\r\n}\r\n\r\nexport default connect(({ user }) => ({ user: user.data }))(SidebarContainer)\r\n","import React from \"react\"\r\nimport { MenuOutlined, EditOutlined } from \"@ant-design/icons\"\r\nimport { Modal, Select, Input, Form, Button } from \"antd\"\r\n\r\nimport { Dialogs } from \"../../containers\"\r\nimport \"./Sidebar.scss\"\r\n\r\nconst { Option } = Select\r\nconst { TextArea } = Input\r\n\r\nconst Sidebar = ({\r\n  user,\r\n  visible,\r\n  inputValue,\r\n  messageText,\r\n  selectedUserId,\r\n  isLoading,\r\n  users,\r\n  onShow,\r\n  onClose,\r\n  onSearch,\r\n  onChangeInput,\r\n  onSelectUser,\r\n  onChangeTextArea,\r\n  onModalOk,\r\n}) => {\r\n  const options = users.map((user) => (\r\n    <Option key={user._id}>{user.login}</Option>\r\n  ))\r\n\r\n  return (\r\n    <div className=\"chat__sidebar\">\r\n      <div className=\"chat__sidebar-header\">\r\n        <div>\r\n          <MenuOutlined style={{ fontSize: 17 }} />\r\n        </div>\r\n        <EditOutlined onClick={onShow} style={{ fontSize: 17 }} />\r\n      </div>\r\n\r\n      <div className=\"chat__sidebar-dialogs\">\r\n        <Dialogs userId={user && user._id} />\r\n      </div>\r\n      <Modal\r\n        title=\"Create dialog\"\r\n        visible={visible}\r\n        footer={[\r\n          <Button key=\"back\" onClick={onClose}>\r\n            Close\r\n          </Button>,\r\n          <Button\r\n            disabled={!messageText}\r\n            key=\"submit\"\r\n            type=\"primary\"\r\n            loading={isLoading}\r\n            onClick={onModalOk}\r\n          >\r\n            Create\r\n          </Button>,\r\n        ]}\r\n      >\r\n        <Form className=\"add-dialog-form\">\r\n          <Form.Item label=\"Username or email\">\r\n            <Select\r\n              value={inputValue}\r\n              onSearch={onSearch}\r\n              onChange={onChangeInput}\r\n              onSelect={onSelectUser}\r\n              notFoundContent={null}\r\n              style={{ width: \"100%\" }}\r\n              defaultActiveFirstOption={false}\r\n              showArrow={false}\r\n              filterOption={false}\r\n              placeholder=\"Username or email\"\r\n              showSearch\r\n            >\r\n              {options}\r\n            </Select>\r\n          </Form.Item>\r\n          {selectedUserId && (\r\n            <Form.Item label=\"Write a message\">\r\n              <TextArea\r\n                autosize={{ minRows: 3, maxRows: 10 }}\r\n                onChange={onChangeTextArea}\r\n                value={messageText}\r\n              />\r\n            </Form.Item>\r\n          )}\r\n        </Form>\r\n      </Modal>\r\n    </div>\r\n  )\r\n}\r\n\r\nSidebar.defaultProps = {\r\n  users: [],\r\n}\r\n\r\nexport default Sidebar\r\n","import React, { useState, useEffect } from \"react\"\r\n\r\nimport { Upload, Modal } from \"antd\"\r\n\r\nfunction getBase64(file) {\r\n  return new Promise((resolve, reject) => {\r\n    const reader = new FileReader()\r\n    reader.readAsDataURL(file)\r\n    reader.onload = () => resolve(reader.result)\r\n    reader.onerror = (error) => reject(error)\r\n  })\r\n}\r\n\r\nconst UploadFiles = ({ attachments, removeAttachment }) => {\r\n  const [state, setState] = useState({\r\n    previewVisible: false,\r\n    previewImage: \"\",\r\n    fileList: attachments,\r\n  })\r\n\r\n  useEffect(() => {\r\n    setState({\r\n      ...state,\r\n      fileList: attachments,\r\n    })\r\n    // eslint-disable-next-line\r\n  }, [attachments])\r\n\r\n  const handleCancel = () => setState({ ...state, previewVisible: false })\r\n\r\n  const handlePreview = async (file) => {\r\n    if (!file.url && !file.preview) {\r\n      file.preview = await getBase64(file.originFileObj)\r\n    }\r\n\r\n    setState({\r\n      ...state,\r\n      previewImage: file.url || file.preview,\r\n      previewVisible: true,\r\n    })\r\n  }\r\n\r\n  const handleChange = ({ fileList }) =>\r\n    setState({\r\n      ...state,\r\n      fileList,\r\n    })\r\n\r\n  return (\r\n    <div className=\"clearfix\">\r\n      <Upload\r\n        action=\"https://www.mocky.io/v2/5cc8019d300000980a055e76\"\r\n        listType=\"picture-card\"\r\n        fileList={state.fileList}\r\n        onPreview={handlePreview}\r\n        onChange={handleChange}\r\n        onRemove={(file) => removeAttachment(file)}\r\n      />\r\n      <Modal\r\n        visible={state.previewVisible}\r\n        footer={null}\r\n        onCancel={handleCancel}\r\n      >\r\n        <img alt=\"example\" style={{ width: \"100%\" }} src={state.previewImage} />\r\n      </Modal>\r\n    </div>\r\n  )\r\n}\r\n\r\nUploadFiles.defaultProps = {\r\n  attachments: [],\r\n}\r\n\r\nexport default UploadFiles\r\n","import React from \"react\"\r\nimport { Link } from \"react-router-dom\"\r\n\r\nimport { Form, Input } from \"antd\"\r\nimport { MailOutlined, LockOutlined } from \"@ant-design/icons\"\r\nimport { Button, Block } from \"../../../components/index\"\r\nimport validateField from \"../../../utils/helpers/validateField\"\r\n\r\nconst LoginForm = (props) => {\r\n  const {\r\n    values,\r\n    touched,\r\n    errors,\r\n    handleChange,\r\n    handleBlur,\r\n    handleSubmit,\r\n    isSubmitting,\r\n  } = props\r\n\r\n  return (\r\n    <div>\r\n      <div className=\"auth__top\">\r\n        <h2>Sign In to Messenger</h2>\r\n      </div>\r\n      <Block>\r\n        <Form onSubmit={handleSubmit} className=\"login-form\">\r\n          <Form.Item\r\n            validateStatus={validateField(\"email\", touched, errors)}\r\n            help={!touched.email ? \" \" : errors.email}\r\n            hasFeedback\r\n          >\r\n            <Input\r\n              id=\"email\"\r\n              placeholder=\"E-mail\"\r\n              prefix={<MailOutlined />}\r\n              size=\"large\"\r\n              value={values.email}\r\n              onChange={handleChange}\r\n              onBlur={handleBlur}\r\n            />\r\n          </Form.Item>\r\n          <Form.Item\r\n            validateStatus={validateField(\"password\", touched, errors)}\r\n            hasFeedback\r\n            onChange={handleChange}\r\n            onBlur={handleBlur}\r\n            help={!touched.password ? \" \" : errors.password}\r\n          >\r\n            <Input.Password\r\n              id=\"password\"\r\n              type=\"password\"\r\n              placeholder=\"Password\"\r\n              prefix={<LockOutlined />}\r\n              size=\"large\"\r\n              value={values.password}\r\n            />\r\n          </Form.Item>\r\n          <Form.Item>\r\n            <Button\r\n              type=\"primary\"\r\n              htmlType=\"submit\"\r\n              size=\"large\"\r\n              onClick={handleSubmit}\r\n              disabled={isSubmitting}\r\n            >\r\n              Sign In\r\n            </Button>\r\n          </Form.Item>\r\n\r\n          <Link className=\"auth__register-link\" to=\"/signup\">\r\n            Create an account\r\n          </Link>\r\n        </Form>\r\n      </Block>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default LoginForm\r\n","export default ({ isAuth, values, errors }) => {\r\n  const rules = {\r\n    email: (value) => {\r\n      if (!value) {\r\n        errors.email = \"E-mail can't be blank\"\r\n      } else if (!/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(value)) {\r\n        errors.email = \"E-mail is invalid or already taken\"\r\n      }\r\n    },\r\n    login: (value) => {\r\n      if (!isAuth && !value) {\r\n        errors.login = \"Login can't be blank\"\r\n      }\r\n    },\r\n    password: (value, isAuth) => {\r\n      if (!value) {\r\n        errors.password =\r\n          \"Passwords must contain: a minimum of 1 lower case letter [a-z],1 upper case letter [A-Z] ,1 numeric character [0-9].\"\r\n      } else if (\r\n        !isAuth &&\r\n        !/^(?=.*[a-z])(?=.*[A-Z])(?=.*[0-9])(?=.{8,})/i.test(value)\r\n      ) {\r\n        errors.password = isAuth\r\n          ? \"Incorrect password\"\r\n          : \"Passwords must contain: a minimum of 1 lower case letter [a-z],1 upper case letter [A-Z] ,1 numeric character [0-9].\"\r\n      }\r\n    },\r\n    password_2: (value, isAuth) => {\r\n      if ((!isAuth && value !== values.password) || !value) {\r\n        errors.password_2 = \"Password does not match\"\r\n      }\r\n    },\r\n  }\r\n\r\n  Object.keys(values).forEach((key) => rules[key] && rules[key](values[key]))\r\n}\r\n","import { createStore, applyMiddleware, compose } from \"redux\"\r\nimport thunk from \"redux-thunk\"\r\nimport rootReducer from \"./reducers\"\r\n\r\nconst composeEnchancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose\r\n\r\nconst middleware = [thunk]\r\n\r\nconst store = createStore(\r\n  rootReducer,\r\n  composeEnchancers(applyMiddleware(...middleware))\r\n)\r\n\r\nexport default store\r\n","import LoginForm from \"./containers/LoginForm\";\r\n\r\nexport default LoginForm;\r\n","import { withFormik } from \"formik\"\r\n\r\nimport LoginForm from \"../components/LoginForm\"\r\nimport validateForm from \"../../../utils/validate\"\r\nimport { userActions } from \"../../../redux/actions\"\r\n\r\nimport store from \"../../../redux/store\"\r\n\r\nconst LoginFormContainer = withFormik({\r\n  enableReinitialize: true,\r\n  mapPropsToValues: () => ({\r\n    email: \"\",\r\n    password: \"\",\r\n  }),\r\n\r\n  validate: (values) => {\r\n    let errors = {}\r\n\r\n    validateForm({ isAuth: true, values, errors })\r\n\r\n    return errors\r\n  },\r\n  handleSubmit: (values, { setSubmitting, props }) => {\r\n    store\r\n      .dispatch(userActions.fetchUserLogin(values))\r\n      .then(({ status }) => {\r\n        if (status === \"success\") {\r\n          props.history.push(\"/\")\r\n        }\r\n        setSubmitting(false)\r\n      })\r\n      .catch(() => {\r\n        setSubmitting(false)\r\n      })\r\n  },\r\n  displayName: \"LoginForm\",\r\n})(LoginForm)\r\n\r\nexport default LoginFormContainer\r\n","import React from \"react\"\r\n\r\nimport { Link } from \"react-router-dom\"\r\n\r\nimport { Form } from \"antd\"\r\nimport {\r\n  UserOutlined,\r\n  LockOutlined,\r\n  MailOutlined,\r\n  MailTwoTone,\r\n} from \"@ant-design/icons\"\r\nimport { Button, Block, FormField } from \"../../../components/index\"\r\n\r\nconst success = false\r\n\r\nconst RegisterForm = (props) => {\r\n  const {\r\n    values,\r\n    touched,\r\n    errors,\r\n    handleChange,\r\n    handleBlur,\r\n    handleSubmit,\r\n    dirty,\r\n    isValid,\r\n    isSubmitting,\r\n  } = props\r\n\r\n  return (\r\n    <div>\r\n      <div className=\"auth__top\">\r\n        <h2>Registration</h2>\r\n      </div>\r\n      <Block>\r\n        {!success ? (\r\n          <Form\r\n            onSubmit={handleSubmit}\r\n            initialValues={{\r\n              remember: true,\r\n            }}\r\n          >\r\n            <FormField\r\n              name=\"email\"\r\n              prefix={<MailOutlined />}\r\n              handleChange={handleChange}\r\n              handleBlur={handleBlur}\r\n              touched={touched}\r\n              errors={errors}\r\n              values={values}\r\n              placeholder=\"E-mail\"\r\n            />\r\n            <FormField\r\n              name=\"login\"\r\n              prefix={<UserOutlined />}\r\n              handleChange={handleChange}\r\n              handleBlur={handleBlur}\r\n              touched={touched}\r\n              errors={errors}\r\n              values={values}\r\n              placeholder=\"Login\"\r\n            />\r\n            <FormField\r\n              name=\"password\"\r\n              prefix={<LockOutlined />}\r\n              type=\"password\"\r\n              handleChange={handleChange}\r\n              handleBlur={handleBlur}\r\n              touched={touched}\r\n              errors={errors}\r\n              values={values}\r\n              placeholder=\"Password\"\r\n            />\r\n            <FormField\r\n              name=\"password_2\"\r\n              prefix={<LockOutlined />}\r\n              handleChange={handleChange}\r\n              type=\"password\"\r\n              handleBlur={handleBlur}\r\n              touched={touched}\r\n              errors={errors}\r\n              values={values}\r\n              placeholder=\"Confirm Password\"\r\n            />\r\n\r\n            <Form.Item>\r\n              {dirty && !isValid && <span>Error</span>}\r\n              <Button\r\n                onClick={handleSubmit}\r\n                disabled={isSubmitting}\r\n                type=\"primary\"\r\n                htmlType=\"submit\"\r\n                size=\"large\"\r\n              >\r\n                Register\r\n              </Button>\r\n            </Form.Item>\r\n            <Link className=\"auth__register-link\" to=\"/signin\">\r\n              Sign In\r\n            </Link>\r\n          </Form>\r\n        ) : (\r\n          <div className=\"auth__success-block\">\r\n            <div>\r\n              <MailTwoTone style={{ fontSize: \"50px\" }} />\r\n            </div>\r\n            <h3>Please verify your e-mail address.</h3>\r\n          </div>\r\n        )}\r\n      </Block>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default RegisterForm\r\n","import RegisterForm from \"./containers/RegisterForm\"\r\n\r\nexport default RegisterForm\r\n","import { withFormik } from \"formik\"\r\n\r\nimport RegisterForm from \"../components/RegisterForm\"\r\nimport validateForm from \"../../../utils/validate\"\r\n\r\nimport { userActions } from \"../../../redux/actions\"\r\nimport store from \"../../../redux/store\"\r\n\r\nexport default withFormik({\r\n  enableReinitialize: true,\r\n  mapPropsToValues: () => ({\r\n    email: \"\",\r\n    login: \"\",\r\n    password: \"\",\r\n    password_2: \"\",\r\n  }),\r\n  validate: (values) => {\r\n    let errors = {}\r\n    validateForm({ isAuth: false, values, errors })\r\n\r\n    return errors\r\n  },\r\n  handleSubmit: (values, { setSubmitting, props }) => {\r\n    store\r\n      .dispatch(userActions.fetchUserRegister(values))\r\n      .then(({ status }) => {\r\n        if (status === \"success\") {\r\n          props.history.push(\"/\")\r\n        }\r\n        setSubmitting(false)\r\n      })\r\n      .catch(() => {\r\n        setSubmitting(false)\r\n      })\r\n  },\r\n  displayName: \"RegisterForm\",\r\n})(RegisterForm)\r\n","import React, { useEffect, useState } from \"react\"\r\nimport { Result, Button } from \"antd\"\r\n\r\nimport { userApi } from \"../../../utils/api\"\r\nimport { Block } from \"../../../components/index\"\r\n\r\nconst renderTextInfo = (hash, verified) => {\r\n  if (hash) {\r\n    if (verified) {\r\n      return {\r\n        status: \"success\",\r\n        message: \"E-mail has been confirmed.\",\r\n      }\r\n    } else {\r\n      return {\r\n        status: \"error\",\r\n        message: \"Something went wrong.\",\r\n      }\r\n    }\r\n  } else {\r\n    return {\r\n      status: \"success\",\r\n      message:\r\n        \"Registration has been successfully completed. Check your e-mail address to verify.\",\r\n    }\r\n  }\r\n}\r\n\r\nconst CheckEmailInfo = ({ location, history }) => {\r\n  const [verified, setVerified] = useState(false)\r\n  const hash = location.search.split(\"hash=\")[1]\r\n  const info = renderTextInfo(hash, verified)\r\n\r\n  useEffect(() => {\r\n    if (hash) {\r\n      userApi.verifyHash(hash).then(({ data }) => {\r\n        if (data.status === \"success\") {\r\n          setVerified(true)\r\n        }\r\n      })\r\n    }\r\n  })\r\n\r\n  return (\r\n    <Block>\r\n      <Result\r\n        status={info.status}\r\n        title={info.status === \"success\" ? \"Ready!\" : \"Error!\"}\r\n        subTitle={info.message}\r\n        extra={\r\n          info.status === \"success\" &&\r\n          verified && (\r\n            <Button type=\"primary\" onClick={() => history.push(\"/signin\")}>\r\n              Sign In\r\n            </Button>\r\n          )\r\n        }\r\n      />\r\n    </Block>\r\n  )\r\n}\r\n\r\nexport default CheckEmailInfo\r\n","import React from \"react\"\r\nimport { LoginForm, RegisterForm } from \"../../modules/modules\"\r\nimport { Route } from \"react-router-dom\"\r\n\r\nimport CheckInfo from \"./components/CheckInfo\"\r\nimport \"./Auth.scss\"\r\n\r\nconst Auth = () => {\r\n  return (\r\n    <section className=\"auth\">\r\n      <div className=\"autn__content\">\r\n        <Route exact path=\"/signin\" component={LoginForm} />\r\n        <Route exact path=\"/signup\" component={RegisterForm} />\r\n        <Route exact path=\"/signup/verify\" component={CheckInfo} />\r\n      </div>\r\n    </section>\r\n  )\r\n}\r\n\r\nexport default Auth\r\n","import React, { useEffect } from \"react\"\r\nimport { withRouter } from \"react-router\"\r\nimport { connect } from \"react-redux\"\r\n\r\nimport { EllipsisOutlined } from \"@ant-design/icons\"\r\n\r\nimport { dialogsActions } from \"../../redux/actions\"\r\nimport \"./home.scss\"\r\nimport { Messages, ChatInput, Status, Sidebar } from \"../../containers/\"\r\n\r\nconst Home = (props) => {\r\n  const { setCurrentDialogId } = props\r\n\r\n  useEffect(() => {\r\n    const {\r\n      location: { pathname },\r\n    } = props\r\n    const dialogId = pathname.split(\"/\").pop()\r\n    setCurrentDialogId(dialogId)\r\n    // eslint-disable-next-line\r\n  }, [props.location.pathname])\r\n\r\n  return (\r\n    <section className=\"home\">\r\n      <div className=\"chat\">\r\n        <Sidebar />\r\n        <div className=\"chat__dialog\">\r\n          <div className=\"chat__dialog-header\">\r\n            <div></div>\r\n            <Status online />\r\n\r\n            <EllipsisOutlined style={{ fontSize: 20 }} />\r\n          </div>\r\n          <div className=\"chat__dialog-messages\">\r\n            <Messages />\r\n          </div>\r\n          <div className=\"chat__dialog-input\">\r\n            <ChatInput />\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </section>\r\n  )\r\n}\r\n\r\nexport default withRouter(\r\n  connect(({ user }) => ({ user: user.data }), dialogsActions)(Home)\r\n)\r\n","import React from \"react\"\r\nimport { Route, Redirect, Switch } from \"react-router-dom\"\r\nimport { connect } from \"react-redux\"\r\n\r\nimport { Auth, Home } from \"./pages/pages\"\r\n\r\nconst App = (props) => {\r\n  const { isAuth } = props\r\n  return (\r\n    <div className=\"wrapper\">\r\n      <Switch>\r\n        <Route\r\n          exact\r\n          path={[\"/signin\", \"/signup\", \"/signup/verify\"]}\r\n          component={Auth}\r\n        />\r\n        <Route\r\n          path=\"/\"\r\n          render={() => (isAuth ? <Home /> : <Redirect to=\"/signin\" />)}\r\n        />\r\n      </Switch>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default connect(({ user }) => ({ isAuth: user.isAuth }))(App)\r\n","import React from \"react\"\r\nimport ReactDOM from \"react-dom\"\r\nimport App from \"./App\"\r\nimport { BrowserRouter as Router } from \"react-router-dom\"\r\nimport { Provider } from \"react-redux\"\r\n\r\nimport \"./styles/index.scss\"\r\nimport \"emoji-mart/css/emoji-mart.css\"\r\nimport store from \"./redux/store\"\r\nimport { userActions } from \"./redux/actions\"\r\n\r\nstore.dispatch(userActions.fetchUserData())\r\n\r\nReactDOM.render(\r\n  <Provider store={store}>\r\n    <Router>\r\n      <App />\r\n    </Router>\r\n  </Provider>,\r\n\r\n  document.getElementById(\"root\")\r\n)\r\n","import { combineReducers } from \"redux\"\r\n\r\nconst reducers = [\"messages\", \"dialogs\", \"user\"]\r\n\r\nexport default combineReducers(\r\n  reducers.reduce((initial, name) => {\r\n    initial[name] = require(`./${name}`).default\r\n    return initial\r\n  }, {})\r\n)\r\n"],"sourceRoot":""}